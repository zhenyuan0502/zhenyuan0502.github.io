<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LLM-Powered Localization Pipeline #1: Faster, Smarter and More Accurate Translation</title>
      <link href="//post/2025/06/02/LLM-Powered-Localization-Pipeline-1-Faster-Smarter-and-More-Accurate-Translation.html"/>
      <url>//post/2025/06/02/LLM-Powered-Localization-Pipeline-1-Faster-Smarter-and-More-Accurate-Translation.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b105acc2b144bb574f34bf886db0e17f92127996d8acf8b6e5e49cc7c75fcfd"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> LLM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LLM </tag>
            
            <tag> Localization </tag>
            
            <tag> Translation </tag>
            
            <tag> Translation Management System </tag>
            
            <tag> TMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Automating Quiz Generation from Books with GPT-4.1</title>
      <link href="//post/2025/05/29/Automating-Quiz-Generation-from-Books-with-GPT-4-1.html"/>
      <url>//post/2025/05/29/Automating-Quiz-Generation-from-Books-with-GPT-4-1.html</url>
      
        <content type="html"><![CDATA[<p>GPT-4.1 is the latest advancement in OpenAI’s large language models, providing enhanced accuracy and response quality compared to its predecessor, GPT-4o. It builds on the strengths of earlier models while delivering more consistent performance across tasks such as reading comprehension, content generation, and interactive learning tools like quizzes.</p><h1 id="GPT-4-1-vs-GPT-4o-Key-Differences-and-Comparison"><a href="#GPT-4-1-vs-GPT-4o-Key-Differences-and-Comparison" class="headerlink" title="GPT-4.1 vs. GPT-4o: Key Differences and Comparison"></a>GPT-4.1 vs. GPT-4o: Key Differences and Comparison</h1><p>When evaluating the transition from GPT-4o to GPT-4.1, several key criterias should be considered to determine which model best fits your use case:</p><ul><li><p><strong>Context Window</strong>: The context window defines the maximum number of tokens (words, code, or symbols) the model can process in a single request, including both input and output. GPT-4.1 offers a much larger context window (up to 1,047,576 tokens) compared to GPT-4o (128,000 tokens), making it ideal for processing entire books or large documents without splitting them into smaller chunks.</p></li><li><p><strong>Token Limits and Handling</strong>: Exceeding a model’s token limit can result in errors, incomplete outputs, or truncated responses. It’s important to design prompts and workflows that respect these boundaries. GPT-4.1’s expanded token capacity allows for more comprehensive analysis and richer outputs, while GPT-4o’s smaller window may require more aggressive chunking or summarization.</p></li><li><p><strong>Model Capabilities and Use Case Alignment</strong>: GPT-4.1 is not specifically a “reasoning” model, but it excels at large-scale, structured text processing tasks, such as extracting topics from books or generating detailed quizzes. It also supports multimodality (text, image, etc.), though GPT-4o is more optimized for real-time multimodal interactions (text, image, audio). GPT-4.1’s strength lies in maintaining context and producing consistent, structured outputs over long documents, while GPT-4o offers faster and more versatile responses but with a smaller context window.</p></li><li><p><strong>Performance and Speed</strong>: GPT-4o is designed for lower latency and higher throughput, making it suitable for interactive applications or scenarios where response time is critical. GPT-4.1 may have longer processing times due to its larger context window and more extensive outputs.</p></li><li><p><strong>Output Structure and Quality</strong>: For tasks requiring highly structured outputs (such as JSON, quizzes, or topic lists), GPT-4.1’s consistency and ability to retain context across large documents provide a significant advantage. GPT-4o is better suited for tasks that benefit from multimodal understanding or require rapid, conversational responses.</p></li><li><p><strong>Cost Considerations</strong>: Larger context windows and more complex outputs can increase API usage costs. Evaluate the trade-offs between model capabilities, required output quality, and budget constraints.</p></li></ul><blockquote><p><strong>GPT-4.1 vs. GPT-4o on Azure (as of May 29, 2025)</strong></p></blockquote><table><thead><tr><th>Feature</th><th><strong>GPT-4.1 (Azure)</strong></th><th><strong>GPT-4o (Azure)</strong></th></tr></thead><tbody><tr><td><strong>Max Context Window</strong></td><td>Up to <strong>1,047,576 tokens</strong></td><td>Up to <strong>128,000 tokens</strong> (input)</td></tr><tr><td><strong>Max Output Tokens</strong></td><td>Up to <strong>32,768 tokens</strong></td><td>Up to <strong>16,384 tokens</strong></td></tr><tr><td><strong>Best Use Cases</strong></td><td>Large-scale text processing, in-depth analysis, educational tools (e.g., quizzes). Multimodality supported</td><td>Multimodal tasks (text, image, audio), real-time interactions</td></tr></tbody></table><p>For more detailed information, refer to the official Azure OpenAI documentation: <a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/models">https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/models</a></p><h1 id="Step-by-Step-Workflow"><a href="#Step-by-Step-Workflow" class="headerlink" title="Step-by-Step Workflow"></a>Step-by-Step Workflow</h1><p><img src="/images/pasted-26.png"></p><p>The book I used for this demostration is <a href="https://github.com/gigahidjrikaaa/Engineering-Books/blob/main/Programming/Object-Oriented%20Programming/Clark%20-%20Beginning%20C%23%20Object-Oriented%20Programming%20%5B2nd%20Edition%5D.pdf">Beginning C# Object-Oriented Programming 2nd edition - Dan Clark</a>, with total 373 pages. This book contains rich, structured technical content that benefits from hierarchical topic extraction.</p><h2 id="📚-Input-Books"><a href="#📚-Input-Books" class="headerlink" title="📚 Input: Books"></a>📚 Input: Books</h2><p>The pipeline begins with digital or scanned books as the raw input material.</p><h2 id="📄-Document-Intelligence"><a href="#📄-Document-Intelligence" class="headerlink" title="📄 Document Intelligence"></a>📄 Document Intelligence</h2><p>A Document Intelligence service (such as Azure AI Document Intelligence or OCR) processes the books to extract structured content. The output is transformed into clean Markdown format for easier parsing and semantic analysis.</p><h2 id="📝-Markdown"><a href="#📝-Markdown" class="headerlink" title="📝 Markdown"></a>📝 Markdown</h2><p>The structured Markdown acts as an intermediary layer, organizing content in a way that’s readable and machine-processable. This format facilitates the next stages of topic extraction and quiz generation. </p><p>The output markdown from the book is 767,408 characters ≈ ~153,000 tokens (based on 5 characters&#x2F;token average). GPT-4.1 on Azure supports up to 1 million context window, allowing processing entire books or large chunks without splitting them into artificial sections.</p><p>Why This Matters:</p><ul><li>No need for aggressive chunking or summarizing before topic extraction.</li><li>Retains full context of terminology, code samples, and explanations.</li><li>Allows hierarchical topic modeling: sections → chapters → concepts.</li></ul><p>I you cannot OCR via Document Intelligence or other similar tool, you can use my result in this gist: <a href="https://gist.github.com/zhenyuan0502/4ee1d7df86fae62d513bf196c0bbc47b">https://gist.github.com/zhenyuan0502/4ee1d7df86fae62d513bf196c0bbc47b</a>, let’s say you will save this as markdown.md</p><h2 id="✨-GPT-4-1-Topic-Extraction"><a href="#✨-GPT-4-1-Topic-Extraction" class="headerlink" title="✨ GPT-4.1: Topic Extraction"></a>✨ GPT-4.1: Topic Extraction</h2><p>The first GPT-4.1 model analyzes the Markdown content to identify key topics or concepts from the book. These topics help frame the knowledge scope and guide focused quiz generation.</p><p>My developer prompt, prompt_get_topic.md</p><pre><code class="highlight plaintext"># Topic Extraction Prompt## Task DescriptionYou will analyze the provided book content and extract key topics and concepts. Your task is to identify major topics, provide concise descriptions, list related subtopics, and note related categories.## Output RequirementsGenerate a structured list of topics following provided pydantic model## Guidelines- Identify 10-15 major topics from the book content- Each topic should be significant and self-contained- Provide accurate, concise descriptions (max 2 sentences)- Include 3-5 relevant subtopics for each main topic- List 1-3 related categories or domains that connect to the topic- Ensure topics represent the book&#x27;s core content and structure- Avoid overly general topics or extremely specific details## Example (for a programming book)&#123;    &quot;topic_name&quot;: &quot;Object-Oriented Programming Fundamentals&quot;,    &quot;topic_description&quot;: &quot;Core concepts and principles of object-oriented programming paradigm. Includes encapsulation, inheritance, and polymorphism as central tenets.&quot;,    &quot;subtopics&quot;: [&quot;Classes and Objects&quot;, &quot;Inheritance and Composition&quot;, &quot;Polymorphism&quot;, &quot;Encapsulation&quot;, &quot;Abstraction&quot;],    &quot;related_categories&quot;: [&quot;Programming Paradigms&quot;, &quot;Software Design&quot;, &quot;Computer Science Fundamentals&quot;]&#125;</code></pre><p>As processing through json would be easier, I organize the Structured Ouput with Pydantic model and include them in the Responses API - the vNext of OpenAI SDK in python</p><p>model.py</p><pre><code class="highlight python"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel, Field<span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span><span class="keyword">class</span> <span class="title class_">Answer</span>(<span class="title class_ inherited__">BaseModel</span>):    text: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;The text content of the answer option&quot;</span>)    explanation: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;Explanation of why this answer is correct or incorrect&quot;</span>)    is_correct: <span class="built_in">bool</span> = Field(..., description=<span class="string">&quot;Boolean flag indicating if this is the correct answer&quot;</span>)<span class="keyword">class</span> <span class="title class_">MultipleChoiceQuestion</span>(<span class="title class_ inherited__">BaseModel</span>):    question: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;The question text being asked&quot;</span>)    category: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;The subject category the question belongs to&quot;</span>)    difficulty: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;The difficulty level of the question (e.g., easy, medium, hard)&quot;</span>)    answers: <span class="type">List</span>[Answer] = Field(..., description=<span class="string">&quot;List of possible answers (should contain exactly 4 answers)&quot;</span>)    <span class="keyword">def</span> <span class="title function_">get_correct_answer</span>(<span class="params">self</span>) -&gt; Answer:        <span class="keyword">for</span> answer <span class="keyword">in</span> <span class="variable language_">self</span>.answers:            <span class="keyword">if</span> answer.is_correct:                <span class="keyword">return</span> answer        <span class="keyword">raise</span> ValueError(<span class="string">&quot;No correct answer found.&quot;</span>)    <span class="keyword">def</span> <span class="title function_">get_incorrect_answers</span>(<span class="params">self</span>) -&gt; <span class="type">List</span>[Answer]:        <span class="keyword">return</span> [answer <span class="keyword">for</span> answer <span class="keyword">in</span> <span class="variable language_">self</span>.answers <span class="keyword">if</span> <span class="keyword">not</span> answer.is_correct]<span class="keyword">class</span> <span class="title class_">ListQuestion</span>(<span class="title class_ inherited__">BaseModel</span>):    responses: <span class="type">List</span>[MultipleChoiceQuestion] = Field(..., description=<span class="string">&quot;List of response strings or questions&quot;</span>)    topic: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;The topic or subject these questions relate to&quot;</span>)<span class="keyword">class</span> <span class="title class_">Topic</span>(<span class="title class_ inherited__">BaseModel</span>):    name: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;The name or title of the topic&quot;</span>)    description: <span class="built_in">str</span> = Field(..., description=<span class="string">&quot;A brief description of the topic&quot;</span>)    questions: <span class="type">List</span>[MultipleChoiceQuestion] = Field(..., description=<span class="string">&quot;List of multiple choice questions related to this topic&quot;</span>)    related_topics: <span class="type">List</span>[<span class="built_in">str</span>] = Field(..., description=<span class="string">&quot;List of related topics or subtopics&quot;</span>)<span class="keyword">class</span> <span class="title class_">ListTopic</span>(<span class="title class_ inherited__">BaseModel</span>):    topics: <span class="type">List</span>[Topic] = Field(..., description=<span class="string">&quot;List of topics extracted from the content&quot;</span>)</code></pre><p>Here is my get_aoai_instance_v2() function, you can replace and short down credential to gpt-4.1 only:</p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">get_aoai_instance_v2</span>(<span class="params">model=<span class="string">&quot;o4-mini&quot;</span></span>):    api_key = os.environ.get(<span class="string">&quot;AZURE_OPENAI_API_KEY_V2&quot;</span>)    endpoint = os.environ.get(<span class="string">&quot;AZURE_OPENAI_ENDPOINT_V2&quot;</span>)    <span class="keyword">if</span> model == <span class="string">&quot;o4-mini&quot;</span>:        deployment = os.environ.get(<span class="string">&quot;AZURE_OPENAI_DEPLOYMENT_V2_O4MINI&quot;</span>)    <span class="keyword">elif</span> model == <span class="string">&quot;o3&quot;</span>:        deployment = os.environ.get(<span class="string">&quot;AZURE_OPENAI_DEPLOYMENT_V2_O3&quot;</span>)    <span class="keyword">elif</span> model == <span class="string">&quot;gpt-4o&quot;</span>:        deployment = os.environ.get(<span class="string">&quot;AZURE_OPENAI_DEPLOYMENT_V2_GPT_4O&quot;</span>)    <span class="keyword">elif</span> model == <span class="string">&quot;gpt-4.1&quot;</span>:        deployment = os.environ.get(<span class="string">&quot;AZURE_OPENAI_DEPLOYMENT_V2_GPT_41&quot;</span>)    <span class="keyword">else</span>:        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Invalid model name. Use &#x27;o4-mini&#x27; or &#x27;o3&#x27;.&quot;</span>)    api_version = os.environ.get(<span class="string">&quot;AZURE_OPENAI_API_VERSION_V2&quot;</span>)    client = AzureOpenAI(        azure_endpoint=endpoint,        api_key=api_key,        api_version=api_version    )    <span class="keyword">return</span> client, deployment</code></pre><p>Function get_topics(), with markdown_content is read from markdown.md</p><pre><code class="highlight python">markdown_content = <span class="built_in">open</span>(<span class="string">&#x27;markdown.md&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read()<span class="keyword">def</span> <span class="title function_">get_topics</span>(<span class="params">markdown_content</span>):    client, deployment = get_aoai_instance_v2(model=<span class="string">&quot;gpt-4.1&quot;</span>)    prompt_get_topics = <span class="built_in">open</span>(os.path.join(os.path.dirname(__file__), <span class="string">&#x27;prompt_get_topic.md&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read()    response = client.responses.parse(            model=deployment,            <span class="built_in">input</span>=[                &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;developer&quot;</span>, <span class="string">&quot;content&quot;</span>: prompt_get_topics&#125;,                &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;&quot;&quot;</span><span class="string">                 </span><span class="string">                For the book content provided below, extract key topics following these guidelines and format:</span><span class="string">                 </span><span class="string">                 </span><span class="string">                <span class="subst">&#123;markdown_content&#125;</span></span><span class="string">                </span><span class="string">                 </span><span class="string">                 &quot;&quot;&quot;</span>&#125;,            ],            text_format=model.ListTopic        )    text = response.output_parsed.model_dump_json(indent=<span class="number">4</span>)        <span class="keyword">return</span> text</code></pre><p>I saved the result in the topic.json, it looks like:</p><pre><code class="highlight json"><span class="punctuation">&#123;</span>    <span class="attr">&quot;topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explores the foundational principles of object-oriented programming (OOP), its history, importance, and basic characteristics like abstraction, encapsulation, inheritance, and polymorphism.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Classes and Objects&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;OOP Language Features&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Programming Paradigms&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Presents the role and elements of UML in designing object-oriented solutions, including use cases, class diagrams, sequence diagrams, and activity diagrams.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Software Requirements Specification (SRS)&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Use Cases&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Class Diagrams&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Designing Object-Oriented Solutions&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Focuses on practical software design using OOP, including requirements analysis, identifying classes, modeling object interactions, and documenting relationships.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;System Analysis&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Modeling Object Relationships&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Case Studies&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C# Language and .NET Framework Basics&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Introduces the evolution of the C# language, its syntax, the .NET ecosystem, and the goals and components of the .NET Framework such as CLR, assemblies, and libraries.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Visual Studio IDE&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Managed Code&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Assemblies and Namespaces&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Working with Classes in C#&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Details how to define, create, and use classes and objects in C#, including encapsulation, properties, methods, constructors, and method overloading.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Class Constructors&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Method Overloading&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Encapsulation&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Hierarchies, Inheritance, and Polymorphism&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explains how to construct class hierarchies using inheritance, implement and override methods, use access modifiers for visibility, and achieve polymorphism via inheritance and interfaces.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Abstract and Sealed Classes&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Interfaces&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Access Modifiers&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object Collaboration, Messaging, and Event-Driven Programming&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explores how objects communicate through method calls and events, handle parameters, use delegates, and respond to or raise events in C# applications.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Delegates&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Event Handlers&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Exception Handling&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Collections, Arrays, and Generics&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Covers the use of collections such as arrays, lists, stacks, queues, and generic collections in .NET, along with iteration, sorting, and extending collection types.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;ArrayList&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Generic Collections&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Stacks and Queues&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Introduces accessing relational databases using ADO.NET, managing connections and commands, working with DataSets and DataTables, and leveraging Entity Framework for ORM and LINQ queries.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;SQL Connections&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;DataTables/DataSets&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;LINQ to Entities&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Developing Windows Applications with WPF&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explains building user interfaces using Windows Presentation Foundation (WPF), including XAML markup, layout and display controls, event handling, data binding, and using templates.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;XAML&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Data Binding&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;WPF Controls&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Developing Web Applications with ASP.NET&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Covers the creation of web-based user interfaces using ASP.NET Web Forms, managing server controls, page life cycle, state management, and data binding in web contexts.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Page Events&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Web Server Controls&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Model Binding&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Developing Windows Store Apps&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Discusses Windows Store application development leveraging XAML for UIs, page navigation, touch events, style sheets, and binding data to controls in C#.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;XAML in Windows Store Apps&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Page Navigation&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Touch Events&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Web Services with WCF and ASP.NET Web API&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Describes how to create, deploy, and consume web services using Windows Communication Foundation (WCF) and ASP.NET Web API, focusing on service contracts, endpoints, data contracts, and RESTful design.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;SOAP and REST&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Service Consumption&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Serialization&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Multi-Tier Application Architecture and Case Study&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Demonstrates designing and building multi-layered applications, such as the Office Supply Ordering (OSO) system, dividing responsibilities into data access, business logic, and presentation layers.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;3-Tier Architecture&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;UI/Business/Data Layers&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Case Studies&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fundamental Programming Concepts in C#&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Provides foundational knowledge of variables, data types, type conversions, operators, control flow structures, loops, and method declaration and usage in C#.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;questions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>            <span class="attr">&quot;related_topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="string">&quot;Data Types&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Operators&quot;</span><span class="punctuation">,</span>                <span class="string">&quot;Control Structures&quot;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span>    <span class="punctuation">]</span><span class="punctuation">&#125;</span></code></pre><h2 id="✨-GPT-4-1-Quiz-Generation"><a href="#✨-GPT-4-1-Quiz-Generation" class="headerlink" title="✨ GPT-4.1: Quiz Generation"></a>✨ GPT-4.1: Quiz Generation</h2><p>A second call to GPT-4.1 is made, this time to generate multiple-choice quizzes based on the Markdown content and extracted topics - actually I used random 3 of 10 topics above to make it more quizzes generated per topic. This ensures the quizzes are relevant, accurate, and aligned with the core material.</p><p>My developer prompt, prompt_create_qna.md</p><pre><code class="highlight markdown"><span class="section"># Custom Question Answering Prompting Guide</span><span class="section">## Objective</span>Create a custom question-answering system using input from a markdown file. The system should generate multiple-choice questions based on the content.<span class="section">## Notes</span><span class="bullet">-</span> Ensure questions span different cognitive levels (recall, understanding, application).<span class="bullet">-</span> Balance question difficulty based on the complexity of the source material.<span class="bullet">-</span> Use the markdown structure to identify key sections, topics, and relationships.<span class="bullet">-</span> For technical content, include code-based questions where appropriate.<span class="bullet">-</span> Consider including true/false or fill-in-the-blank questions for variety.</code></pre><p>Function generate_quiz(), with json_topic_text is purely text in topic.json and same markdown_content</p><pre><code class="highlight python">markdown_content = <span class="built_in">open</span>(<span class="string">&#x27;markdown.md&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read()json_topic_text = <span class="built_in">open</span>(<span class="string">&#x27;topic.json&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read()<span class="keyword">def</span> <span class="title function_">generate_quiz</span>(<span class="params">markdown_content, num_questions, json_topic_text</span>):    <span class="comment"># read json_topics as model.ListTopic</span>    json_topics = model.ListTopic.model_validate_json(json_topic_text)    random_topics = random.sample(json_topics.topics, <span class="number">3</span>)    random_topics_dict = [topic.model_dump() <span class="keyword">for</span> topic <span class="keyword">in</span> random_topics]    client, deployment = get_aoai_instance_v2(model=<span class="string">&quot;gpt-4.1&quot;</span>)    prompt_create_qna = <span class="built_in">open</span>(os.path.join(os.path.dirname(__file__), <span class="string">&#x27;prompt_create_qna.md&#x27;</span>), <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read()    response = client.responses.parse(            model=deployment,            <span class="built_in">input</span>=[                &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;developer&quot;</span>, <span class="string">&quot;content&quot;</span>: prompt_create_qna&#125;,                &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;&quot;&quot;</span><span class="string">                </span><span class="string">                Covered topics:</span><span class="string">               </span><span class="string">                    <span class="subst">&#123;json.dumps(random_topics_dict, indent=<span class="number">4</span>)&#125;</span></span><span class="string">                </span><span class="string">                 </span><span class="string">                Please create <span class="subst">&#123;num_questions&#125;</span> questions based on the following markdown content with above topics.</span><span class="string">                </span><span class="string">                    <span class="subst">&#123;markdown_content&#125;</span></span><span class="string">                </span><span class="string">                 </span><span class="string">                 &quot;&quot;&quot;</span>&#125;,            ],            text_format=model.ListQuestion        )    list_questions = response.output_parsed.model_dump_json(indent=<span class="number">4</span>)        <span class="keyword">return</span> list_questions, json.dumps(random_topics_dict, indent=<span class="number">4</span>)</code></pre><h2 id="✅-Output-Quiz"><a href="#✅-Output-Quiz" class="headerlink" title="✅ Output: Quiz"></a>✅ Output: Quiz</h2><p>The final output is a set of multiple-choice quizzes that can be used for self-assessment, educational apps, or classroom activities.</p><pre><code class="highlight json"><span class="punctuation">&#123;</span>    <span class="attr">&quot;responses&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of the following best describes the purpose of encapsulation in object-oriented programming?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It hides the internal data of an object and allows access only through methods or properties.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Encapsulation is about restricting direct access to the internal state of an object, providing controlled access through public methods and properties.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It enables objects to inherit properties and methods from a base class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This describes inheritance, not encapsulation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It allows multiple objects to be composed together.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This describes aggregation, not encapsulation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It allows a method to have multiple forms.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This describes polymorphism, not encapsulation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which key benefit did the .NET Framework bring compared to previous Microsoft platforms?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET Framework and Visual Studio&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Automatic memory management through garbage collection.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The .NET Framework introduced automatic garbage collection, simplifying memory management for developers.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code is always interpreted, never compiled.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is incorrect. .NET code is compiled to MSIL and then JIT compiled to native code.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;All applications must run in Internet Explorer.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is incorrect. .NET enables development for Windows and web applications.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Only supports Visual Basic language.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is incorrect. .NET supports multiple languages, including C#, VB.NET, F#, and others.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which UML diagram is primarily used to model the static structure of classes in a system?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class diagrams model the static structure, showing classes, their attributes, and relationships.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sequence Diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sequence diagrams model interactions over time, not static structures.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Activity Diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Activity diagrams model workflows/processes, not class structures.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Use Case Diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Use case diagrams model system functionality from the user&#x27;s perspective, not class structures.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What is the purpose of the DataSet object in ADO.NET?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access in C# with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To hold a disconnected, in-memory cache of data tables retrieved from a database.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataSet stores data tables locally in memory, allowing disconnected manipulation and later updating to the database.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To manage direct, live connections to the database.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is handled by the Connection object, not DataSet.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To execute SQL queries directly on the database.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is the responsibility of the Command object.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To persistently store all changes to the database immediately.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataSet works with local, in-memory data; updates to the database are made explicitly when needed.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of the following is NOT a characteristic of object-oriented programming?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Execution of code from top to bottom in a single linear stream.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This describes procedural programming, not a characteristic of OOP.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstraction&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstraction is a core characteristic of OOP.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance is a core characteristic of OOP.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Polymorphism&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Polymorphism is a core characteristic of OOP.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True or False: Inheritance allows a child class to reuse and extend the behavior and attributes of a base class.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance enables code reuse by allowing child classes to inherit and extend base class members.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This statement is correct regarding inheritance.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Not Sure&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Review the concept of inheritance in OOP.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Only applies to interfaces&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance applies to classes; interfaces define contracts.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;In the context of the Entity Framework, what is the main advantage of LINQ?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access in C# with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It allows developers to write database queries using native C# syntax, which are then translated to the underlying data provider&#x27;s query language.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ provides a consistent, strongly-typed query syntax in C#, making data retrieval easier and less error-prone.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It compiles all .NET applications to machine code.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Compilation is not the main concern of LINQ.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It provides direct editing of database schemas in Visual Studio.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ does not edit database schemas; it queries data.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;It allows database queries only in string format.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ uses C# language constructs, not raw strings.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An abstract class in C# is used when:&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;You want to define a base class that cannot be instantiated, but can provide shared members and define abstract methods for derived classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstract classes are used to provide common functionality and enforce implementation of certain methods in derived classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;You need to prevent any further inheritance from this class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This describes a sealed class, not an abstract class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;You want to directly create objects from this class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstract classes cannot be instantiated directly.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;You need to define only static methods.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Static methods can be in any class; abstract classes are for code sharing and contracts.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What type of relationship does aggregation express between classes?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A &#x27;whole-part&#x27; relationship where one class is composed of other classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aggregation represents a class (whole) that contains other classes (parts), which is a &#x27;has-a&#x27; relationship.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A parent-child relationship where one class inherits from another.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That is inheritance, not aggregation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A relationship where two classes can use each other&#x27;s methods interchangeably.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That describes an association, not aggregation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An enforced one-to-one relationship in a database.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aggregation is a class composition concept, not a database constraint.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When would you use a sealed class in C#?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When you want to prevent other classes from inheriting from it.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The sealed keyword prevents further inheritance from the class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When you want to make the class abstract.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstract classes enforce inheritance, not prevent it.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When you need the class to only have static methods.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sealed does not relate to static methods.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When you want to allow partial implementation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Partial classes are different from sealed classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of the following statements is TRUE regarding DataTables and DataSets in ADO.NET?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access in C# with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A DataSet can contain multiple DataTables and relationships between them.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A DataSet is a collection of DataTables and can manage their relationships, acting like an in-memory database.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A DataTable is a collection of DataSets.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Correct relationship is reverse: DataSet contains DataTables.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataSets are used only for executing SQL commands.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Execution of SQL is done by Command objects, not DataSets.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataTables cannot represent relational data.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataTables represent table structure, and DataSet can relate them.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which Visual Studio feature allows developers to debug code by pausing execution at a specific line?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET Framework and Visual Studio&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Breakpoint&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Breakpoints let you pause program execution to inspect or step through code.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IntelliSense&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IntelliSense provides code completion and suggestions, not debugging.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Solution Explorer&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Solution Explorer helps manage files but doesn&#x27;t pause code execution.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Reference Manager&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Reference Manager is for managing dependencies.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When using the Entity Framework, what file extension is used for the model&#x27;s XML-based definition?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access in C# with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.edmx&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Entity Data Model files are named with .edmx extension.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.dll&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Assemblies are .dll, but .edmx is for Entity Framework models.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.config&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Config files store settings, not model schemas.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.cs&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.cs are code files.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Why did Microsoft create the Common Language Runtime (CLR) as a core part of the .NET Framework?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET Framework and Visual Studio&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To abstract the code execution from the operating system, managing memory, type safety, security, and more.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLR provides a managed runtime environment with many services.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To enable C# code to run only on Windows 98.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLR is for code management and is not specific to Windows 98.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To require all applications to be written in C++.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The CLR is language-agnostic.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;To expose direct hardware access to application code.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLR abstracts hardware details, providing safety instead.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fill in the blank: In ADO.NET, the ______ object is responsible for issuing SQL commands and retrieving results from a database.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access in C# with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Command&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The Command object issues SQL statements and obtains results.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Connection&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The Connection object manages the connection, not issuing queries.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataSet&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataSet stores results; commands are issued by Command objects.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Adapter&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The DataAdapter mediates between the DataSet and the database, but Command objects execute the SQL.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A collection type in .NET that always returns elements in the last-in, first-out (LIFO) order is called a...&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET Framework and Visual Studio&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Stack&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Stack collections provide LIFO behavior.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Queue&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Queue collections are first-in, first-out (FIFO).&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ArrayList&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ArrayLists have no enforced order for adding/removing.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionary&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dictionaries map keys to values, not defined by order.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which technology in .NET is designed to bridge the gap between the object-oriented structure of a programming language and the relational data structure of a database?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Access in C# with ADO.NET and Entity Framework&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Entity Framework&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Entity Framework is an ORM (object-relational mapper) that facilitates this mapping.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ADO.NET DataReader&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataReader is for fast, forward-only reading of data.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataAdapter&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataAdapter bridges DataSet and Command objects, but does not deal with ORM.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ to Objects&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ to Objects is for querying in-memory objects.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which access modifier in C# ensures that a class member is accessible only within the class itself?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class Structures and Hierarchies&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;private&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;private restricts access to the same class only.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;protected&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;protected allows access in the class and derived classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;internal&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;internal allows access anywhere within the same assembly.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public allows access from anywhere.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of the following is NOT a core characteristic of Object-Oriented Programming (OOP)?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstraction&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Abstraction is a core OOP characteristic, allowing you to focus on relevant data.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Encapsulation&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Encapsulation is a key OOP characteristic, involving hiding data within objects.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance is an OOP characteristic, allowing creation of new classes based on existing ones.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Linear execution&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Linear execution is a characteristic of procedural programming, not OOP.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which programming paradigm organizes programs in a linear sequence of steps?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;OOP centers on object interaction, not linear steps.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Procedural Programming&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Procedural programming organizes code in a series of sequential steps.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Functional Programming&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Functional programming focuses on functions and immutability.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Declarative Programming&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Declarative programming expresses logic without explicit control flow.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What is encapsulation in OOP?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hiding the implementation details of data and exposing only necessary functionalities&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Encapsulation restricts access to object data and only allows interaction through methods/properties.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dividing code into repeated steps&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is related to procedural decomposition, not encapsulation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Combining multiple classes into a single class&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This misrepresents encapsulation; aggregation/composition would be about combining classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allowing multiple meanings for a single function name&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is polymorphism.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of the following best describes polymorphism in OOP?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enabling objects to respond to the same message in unique ways&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Polymorphism means different objects can execute different behaviors in response to the same method call.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Protecting object data from outside access&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That is encapsulation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Relating classes through inheritance only&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance is just the relationship, not polymorphism.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dividing objects into smaller pieces&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That would be more related to decomposition.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which was the first programming language to introduce OOP concepts in the 1960s?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Simula&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Simula, developed in the 1960s, introduced the first OOP concepts.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Smalltalk&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Smalltalk popularized OOP later, but was not the first.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C++&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C++ came after OOP concepts were established.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Java&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Java was designed in the 1990s.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;In the evolution of C# and .NET, which feature was introduced to help eliminate impedance mismatch between programming and database languages?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fundamental Programming Concepts in C#&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hard&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET Remoting&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Remoting is about distributed objects, not data access.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generics&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;While generics are useful for type safety, they don&#x27;t directly solve language-database mismatch.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LINQ (Language Integrated Query) was introduced to seamlessly work with data, bridging programming and database query languages.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Reflection&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Reflection is used to inspect metadata at runtime.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which relationship is modeled in UML when a class includes instances of other classes as its parts?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance involves a parent and child class, not parts.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aggregation&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aggregation models a whole-part relationship where one class contains or is composed of other classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Association&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Association is a broader relationship type, not specifically whole-part.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Polymorphism&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Polymorphism is not a structural relationship.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which diagram is primarily used in UML to show the dynamic interaction between objects over time?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class diagrams show static structure.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sequence diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sequence diagrams illustrate object interactions over time.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Use case diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Use case diagrams show system functionality from a user&#x27;s perspective.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Activity diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Activity diagrams show the flow of actions or activities.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What does the &#x27;extends&#x27; relationship indicate between use cases in UML?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The base use case is always called before the extended use case.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That&#x27;s not correct; &#x27;include&#x27; is always called before. &#x27;Extends&#x27; means the base use case can be extended by condition.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A use case may add behavior to another use case under certain conditions.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The &#x27;extends&#x27; relationship means the additional behavior is only triggered given some condition.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Two use cases are always executed together.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This describes &#x27;include&#x27;, not &#x27;extend&#x27;.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;There is no direct relationship, it&#x27;s just documentation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#x27;Extends&#x27; has semantic meaning in UML use cases.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of the following best describes the purpose of a Software Requirements Specification (SRS) in object-oriented design?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Describes the technical solution of the system&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SRS focuses on functional requirements and business logic, not the technical solution.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Defines the scope, users, and functional requirements of the system&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SRS clearly defines the functional requirements, users, interactions, and scope.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Shows the interactions between objects at runtime&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That is the purpose of a sequence diagram.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lists the names of the database tables&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That&#x27;s the job of data modeling documents, not the SRS.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;When modeling an association in a UML class diagram, what does &#x27;multiplicity&#x27; mean?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The number of classes participating in inheritance&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Multiplicity refers to the number of instances related through an association.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The number of operations in a class&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Operations are not related to association multiplicity.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The number of instances of one class that can be associated with another class&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Correct. Multiplicity indicates, for example, 1..n or 0..1 relationships.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The number of diagrams in the UML model&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is not a UML association concept.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fill in the blank: In C#, the keyword used to prevent a class from being inherited by other classes is __________.&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fundamental Programming Concepts in C#&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;static&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;static is for static members, not for preventing inheritance.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;private&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;private restricts access, not inheritance.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sealed&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The sealed keyword is used to prevent further inheritance.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abstract&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abstract allows for base class functionality but requires implementation by derivation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What UML diagram is most useful for visualizing workflows, branching, and parallel processing in a system?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sequence diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sequence diagrams show interactions over time, but do not represent branching/parallel workflows well.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Activity diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Activity diagrams are designed for process flows with branches and parallel paths.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Class diagrams show static structure.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Collaboration diagram&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Collaboration diagrams focus on communications rather than control flow.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Which of these would NOT typically be considered a candidate &#x27;class&#x27; when analyzing a system in OOP design?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Book&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Book is a classic example of a class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fine&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fine tracks money owed and could encapsulate state and behavior.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Manager&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Manager represents a type of object interacting with the system.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Number&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Number is usually just a value/attribute, not a business class.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;In object-oriented programming, what is the primary benefit of using inheritance?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Object-Oriented Programming Fundamentals&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code duplication&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance helps reduce code duplication by reusing base class code.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Reusing and extending functionality in a hierarchical manner&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance enables reuse and extension of base class functionality by derived classes.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hiding data from users&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That&#x27;s encapsulation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allowing unrelated objects to interact&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;That&#x27;s association/aggregation.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What is the primary purpose of a CASE tool like UMLet in the software design process?&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;easy&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Writing production code&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CASE tools are for design and modeling, not actual coding.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Drafting and sharing professional-quality design diagrams&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CASE tools allow for rapid creation and easy sharing of diagrams, improving design documentation and communication.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Managing databases&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Database management is not the focus of CASE tools like UMLet.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Running code tests&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Testing is not the primary purpose of CASE tools.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span><span class="punctuation">,</span>        <span class="punctuation">&#123;</span>            <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="string">&quot;In the class diagram below, which relationship is represented by an open arrow from &#x27;RetailCustomer&#x27; to &#x27;Customer&#x27;?\n\nCustomer\n^ (open arrow)\nRetailCustomer&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unified Modeling Language (UML) and OOP Design&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;difficulty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span>            <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Association&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Association is a direct link but not hierarchy.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Inheritance&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An open arrow in UML class diagrams indicates that the child (RetailCustomer) inherits from the parent (Customer).&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aggregation&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aggregation is represented by a diamond, not an arrow.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span><span class="punctuation">,</span>                <span class="punctuation">&#123;</span>                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dependency&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;explanation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dependency is typically a dashed arrow.&quot;</span><span class="punctuation">,</span>                    <span class="attr">&quot;is_correct&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                <span class="punctuation">&#125;</span>            <span class="punctuation">]</span>        <span class="punctuation">&#125;</span>    <span class="punctuation">]</span><span class="punctuation">,</span>    <span class="attr">&quot;topic&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Beginning C# Object-Oriented Programming, .NET Framework, Visual Studio, and Data Access with ADO.NET/EF&quot;</span><span class="punctuation">&#125;</span></code></pre><h1 id="How-many-token-actually-used"><a href="#How-many-token-actually-used" class="headerlink" title="How many token actually used?"></a>How many token actually used?</h1><p>To track the actual token usage during API calls, you can extract token counts from the response object using the following Python function::</p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">get_token_usage</span>(<span class="params">response</span>) -&gt; <span class="built_in">dict</span>:    <span class="keyword">return</span> &#123;        <span class="string">&quot;input_tokens&quot;</span>: response.usage.input_tokens,        <span class="string">&quot;output_tokens&quot;</span>: response.usage.output_tokens,        <span class="string">&quot;total_tokens&quot;</span>: response.usage.total_tokens,    &#125;</code></pre><p>Topic Extraction</p><pre><code class="highlight text">Used tokens: &#123;&#x27;input_tokens&#x27;: 174265, &#x27;output_tokens&#x27;: 1294, &#x27;total_tokens&#x27;: 175559&#125;</code></pre><p>Quiz Generation</p><pre><code class="highlight text">Used tokens: &#123;&#x27;input_tokens&#x27;: 174283, &#x27;output_tokens&#x27;: 3663, &#x27;total_tokens&#x27;: 177946&#125;</code></pre><p>These numbers confirm that GPT-4.1 can effectively handle large inputs—such as an entire technical book—within a single context window, while still producing structured and detailed outputs. Why GPT-4o won’t work here? Because its maximum context window is limited to 128,000 tokens. In contrast, GPT-4.1 supports up to 1 million tokens, making it uniquely suited for tasks like:</p><ul><li>Processing entire books in one pass</li><li>Preserving full context for topic extraction</li><li>Generating high-quality, context-aware quizzes</li></ul><p>For large-scale, text-heavy applications, GPT-4.1 remains the better choice due to its extended memory and deeper language understanding.</p><h1 id="What-improvement-could-be-made"><a href="#What-improvement-could-be-made" class="headerlink" title="What improvement could be made?"></a>What improvement could be made?</h1><p>There are several ways it could be further improved for greater accuracy usability, and educational value. Even though models like GPT-4.1 are significantly more accurate and capable than previous versions, they are still not immune to hallucination — the generation of plausible-sounding but factually incorrect or misleading content. And yes, double-checking is still essential.</p><h2 id="Source-Citations-for-Each-Question"><a href="#Source-Citations-for-Each-Question" class="headerlink" title="Source Citations for Each Question"></a>Source Citations for Each Question</h2><p>Include citations or references to the original book content (e.g., chapter or section number) for each quiz question. This helps learners:</p><ul><li>Trace concepts back to the source</li><li>Deepen understanding through contextual reading</li></ul><h2 id="Validate-Quiz-Content"><a href="#Validate-Quiz-Content" class="headerlink" title="Validate Quiz Content"></a>Validate Quiz Content</h2><p>This acts as a peer-review stage and improves overall reliability, it reviews the generated quizzes for:</p><ul><li>Accuracy and consistency with the source material</li><li>Avoidance of trick questions or ambiguous phrasing</li></ul><p>By linking each quiz question to a specific section or chapter of the book, you can scope down the validation process. This makes it easier to check the integrity of the question without re-reading the entire book: </p><ul><li><p>Does this question reference content from Chapter X of the book? Prompt: Given the following quiz question and the corresponding source excerpt from the book, determine if the question is factually supported by the source. Explain your reasoning.</p></li><li><p>Is the correct answer explicitly or implicitly stated in the cited section? Prompt: Is the correct answer to this quiz question explicitly or implicitly mentioned in the source material below? If not, flag it as unsupported.</p></li><li><p>Are there any misleading or unsupported distractors? Prompt: Review the following multiple-choice question and its options. Identify any distractors (incorrect options) that might be misleading, technically inaccurate, or too ambiguous given the source context.</p></li><li><p>Clarity and Bias Check. Prompt: Evaluate this quiz question for clarity and neutrality. Is the wording unambiguous? Could it confuse or mislead learners? Suggest a clearer version if needed.</p></li><li><p>Chapter Reference Validation: Prompt: Does the content of this quiz question appear in Chapter X of the book <em>Beginning C# Object-Oriented Programming (2nd Edition)</em>? Justify your answer briefly.</p></li><li><p>Learning Objective Alignment: Prompt: Does this question align with the learning objectives of the chapter it’s based on? If not, explain why and suggest a more relevant question.</p></li></ul><h2 id="Difficulty-Grading-and-Bloom’s-Taxonomy-Alignment"><a href="#Difficulty-Grading-and-Bloom’s-Taxonomy-Alignment" class="headerlink" title="Difficulty Grading and Bloom’s Taxonomy Alignment"></a>Difficulty Grading and Bloom’s Taxonomy Alignment</h2><p>Tag questions with difficulty levels such as:</p><ul><li>Basic (Recall)</li><li>Intermediate (Understanding)</li><li>Advanced (Application, Analysis)</li></ul><p>Or go further by aligning them with Bloom’s Taxonomy levels: Remember → Understand → Apply → Analyze → Evaluate → Create</p><h2 id="Cross-Referencing-with-External-Knowledge"><a href="#Cross-Referencing-with-External-Knowledge" class="headerlink" title="Cross-Referencing with External Knowledge"></a>Cross-Referencing with External Knowledge</h2><p>Enrich the quiz by:</p><ul><li>Validating content against documentation (e.g., Microsoft Docs for C#)</li><li>Adding real-world examples or use cases to make questions more practical</li></ul>]]></content>
      
      
      <categories>
          
          <category> LLM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Azure OpenAI </tag>
            
            <tag> Document Intelligence </tag>
            
            <tag> GPT-4.1 </tag>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Server Track Data Changes #1: Trigger-based</title>
      <link href="//post/2023/12/23/SQL-Server-Track-Data-Changes-1-Trigger-based.html"/>
      <url>//post/2023/12/23/SQL-Server-Track-Data-Changes-1-Trigger-based.html</url>
      
        <content type="html"><![CDATA[<p>SQL Server tracking changes data is useful for auditing purposes, troubleshooting, and data analysis. By tracking changes, you can easily identify what data has been modified, who made the changes, and when the changes were made. Aside with other solutions like CT (Change Tracking), CDC (Change Data Captured), Temporal Table (System-versioning). The most common and simple method for implementing tracking in SQL Server is by using Triggers (Stored Procedure). Which will be automatically executed in response to certain events, such as an insert, update, or delete operation. By using triggers, you can capture the changes made to a table and store them in a separate table for later analysis.</p><h1 id="Create-sample-table"><a href="#Create-sample-table" class="headerlink" title="Create sample table"></a>Create sample table</h1><pre><code class="highlight SQL"><span class="keyword">CREATE</span> DATABASE TEST_CHANGES_TRACKINGUSE TEST_CHANGES_TRACKING<span class="comment">-- Create Users table</span><span class="keyword">CREATE TABLE</span> Users (    UserID <span class="type">INT</span> <span class="keyword">IDENTITY</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">PRIMARY KEY</span>,    Username NVARCHAR(<span class="number">100</span>),    Email NVARCHAR(<span class="number">150</span>),    Age <span class="type">INT</span>);<span class="comment">-- Set the number of users to insert</span><span class="keyword">DECLARE</span> <span class="variable">@NumUsers</span> <span class="type">INT</span>;<span class="keyword">SET</span> <span class="variable">@NumUsers</span> <span class="operator">=</span> <span class="number">50</span>;<span class="comment">-- Insert random data into Users table</span><span class="keyword">DECLARE</span> <span class="variable">@Counter</span> <span class="type">INT</span> <span class="operator">=</span> <span class="number">1</span>;WHILE <span class="variable">@Counter</span> <span class="operator">&lt;=</span> <span class="variable">@NumUsers</span><span class="keyword">BEGIN</span>    <span class="comment">-- Generating a radnom username</span>    <span class="keyword">DECLARE</span> <span class="variable">@Username</span> NVARCHAR(<span class="number">50</span>) <span class="operator">=</span> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">36</span>), NEWID()) <span class="operator">+</span> <span class="built_in">CAST</span>(<span class="variable">@Counter</span> <span class="keyword">AS</span> NVARCHAR(<span class="number">10</span>));     <span class="keyword">INSERT INTO</span> Users (Username, Email, Age)    <span class="keyword">VALUES</span> (        <span class="variable">@Username</span>,        <span class="variable">@Username</span> <span class="operator">+</span> <span class="string">&#x27;@example.com&#x27;</span>,        ROUND(RAND() <span class="operator">*</span> <span class="number">50</span> <span class="operator">+</span> <span class="number">20</span>, <span class="number">1</span>) <span class="comment">-- Generating a random age between 20 and 70</span>    );    <span class="keyword">SET</span> <span class="variable">@Counter</span> <span class="operator">=</span> <span class="variable">@Counter</span> <span class="operator">+</span> <span class="number">1</span>;<span class="keyword">END</span><span class="comment">-- Query to view the inserted data</span><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Users;</code></pre><p>Here is the sample of 9 first of new 50 inserted users</p><table><thead><tr><th>UserID</th><th>Username</th><th>Email</th><th>Age</th></tr></thead><tbody><tr><td>1</td><td>52FD2FA1-2493-4AF7-B32D-B07FC3CCD2281</td><td><a href="mailto:&#53;&#x32;&#70;&#x44;&#x32;&#70;&#65;&#49;&#x2d;&#x32;&#x34;&#x39;&#x33;&#45;&#52;&#x41;&#70;&#x37;&#45;&#x42;&#51;&#50;&#68;&#x2d;&#x42;&#x30;&#x37;&#x46;&#x43;&#51;&#67;&#x43;&#x44;&#x32;&#x32;&#56;&#49;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#53;&#x32;&#70;&#x44;&#x32;&#70;&#65;&#49;&#x2d;&#x32;&#x34;&#x39;&#x33;&#45;&#52;&#x41;&#70;&#x37;&#45;&#x42;&#51;&#50;&#68;&#x2d;&#x42;&#x30;&#x37;&#x46;&#x43;&#51;&#67;&#x43;&#x44;&#x32;&#x32;&#56;&#49;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;&#109;</a></td><td>24</td></tr><tr><td>2</td><td>040D7C77-2524-40C9-B255-7B1E9C86E83B2</td><td><a href="mailto:&#x30;&#x34;&#48;&#x44;&#x37;&#x43;&#x37;&#x37;&#45;&#x32;&#x35;&#50;&#52;&#x2d;&#52;&#x30;&#x43;&#57;&#x2d;&#x42;&#x32;&#53;&#53;&#x2d;&#x37;&#x42;&#x31;&#x45;&#57;&#67;&#56;&#x36;&#x45;&#56;&#x33;&#x42;&#50;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#109;">&#x30;&#x34;&#48;&#x44;&#x37;&#x43;&#x37;&#x37;&#45;&#x32;&#x35;&#50;&#52;&#x2d;&#52;&#x30;&#x43;&#57;&#x2d;&#x42;&#x32;&#53;&#53;&#x2d;&#x37;&#x42;&#x31;&#x45;&#57;&#67;&#56;&#x36;&#x45;&#56;&#x33;&#x42;&#50;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#109;</a></td><td>42</td></tr><tr><td>3</td><td>E22CB32D-5700-4DCE-AC5F-357984A7FEE83</td><td><a href="mailto:&#x45;&#50;&#50;&#67;&#66;&#51;&#50;&#x44;&#45;&#53;&#55;&#48;&#x30;&#45;&#52;&#68;&#67;&#x45;&#x2d;&#65;&#x43;&#53;&#70;&#45;&#x33;&#x35;&#55;&#57;&#56;&#52;&#x41;&#55;&#70;&#69;&#x45;&#x38;&#x33;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#x45;&#50;&#50;&#67;&#66;&#51;&#50;&#x44;&#45;&#53;&#55;&#48;&#x30;&#45;&#52;&#68;&#67;&#x45;&#x2d;&#65;&#x43;&#53;&#70;&#45;&#x33;&#x35;&#55;&#57;&#56;&#52;&#x41;&#55;&#70;&#69;&#x45;&#x38;&#x33;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a></td><td>36</td></tr><tr><td>4</td><td>D3DCBFE8-3EA4-4DF6-A469-FDEE36A221854</td><td><a href="mailto:&#68;&#51;&#x44;&#x43;&#66;&#70;&#x45;&#x38;&#45;&#51;&#x45;&#x41;&#52;&#x2d;&#52;&#x44;&#x46;&#x36;&#x2d;&#65;&#x34;&#54;&#x39;&#x2d;&#x46;&#x44;&#x45;&#x45;&#x33;&#x36;&#65;&#x32;&#50;&#x31;&#x38;&#53;&#x34;&#64;&#x65;&#120;&#x61;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;">&#68;&#51;&#x44;&#x43;&#66;&#70;&#x45;&#x38;&#45;&#51;&#x45;&#x41;&#52;&#x2d;&#52;&#x44;&#x46;&#x36;&#x2d;&#65;&#x34;&#54;&#x39;&#x2d;&#x46;&#x44;&#x45;&#x45;&#x33;&#x36;&#65;&#x32;&#50;&#x31;&#x38;&#53;&#x34;&#64;&#x65;&#120;&#x61;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>31</td></tr><tr><td>5</td><td>03F0B9C3-8455-4703-A3BB-631D24ECF2DC5</td><td><a href="mailto:&#48;&#51;&#70;&#48;&#66;&#57;&#x43;&#51;&#x2d;&#56;&#x34;&#x35;&#53;&#x2d;&#x34;&#55;&#x30;&#51;&#x2d;&#x41;&#51;&#66;&#x42;&#x2d;&#x36;&#x33;&#49;&#68;&#x32;&#52;&#69;&#67;&#x46;&#50;&#68;&#67;&#53;&#64;&#101;&#x78;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#109;">&#48;&#51;&#70;&#48;&#66;&#57;&#x43;&#51;&#x2d;&#56;&#x34;&#x35;&#53;&#x2d;&#x34;&#55;&#x30;&#51;&#x2d;&#x41;&#51;&#66;&#x42;&#x2d;&#x36;&#x33;&#49;&#68;&#x32;&#52;&#69;&#67;&#x46;&#50;&#68;&#67;&#53;&#64;&#101;&#x78;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#109;</a></td><td>52</td></tr><tr><td>6</td><td>077CBF3F-51C2-4E75-928E-CFB58E652DA06</td><td><a href="mailto:&#x30;&#x37;&#55;&#67;&#x42;&#x46;&#x33;&#70;&#x2d;&#x35;&#49;&#67;&#x32;&#x2d;&#x34;&#69;&#x37;&#53;&#x2d;&#57;&#50;&#x38;&#69;&#45;&#x43;&#x46;&#x42;&#53;&#56;&#69;&#x36;&#53;&#50;&#x44;&#65;&#x30;&#54;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;">&#x30;&#x37;&#55;&#67;&#x42;&#x46;&#x33;&#70;&#x2d;&#x35;&#49;&#67;&#x32;&#x2d;&#x34;&#69;&#x37;&#53;&#x2d;&#57;&#50;&#x38;&#69;&#45;&#x43;&#x46;&#x42;&#53;&#56;&#69;&#x36;&#53;&#50;&#x44;&#65;&#x30;&#54;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;</a></td><td>43</td></tr><tr><td>7</td><td>7A8C0419-1738-40AA-AD22-0019376285D47</td><td><a href="mailto:&#x37;&#65;&#x38;&#x43;&#48;&#52;&#x31;&#x39;&#x2d;&#49;&#55;&#51;&#56;&#x2d;&#x34;&#x30;&#x41;&#x41;&#45;&#x41;&#x44;&#50;&#50;&#x2d;&#x30;&#x30;&#x31;&#x39;&#x33;&#x37;&#54;&#50;&#56;&#53;&#68;&#52;&#x37;&#x40;&#x65;&#x78;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;">&#x37;&#65;&#x38;&#x43;&#48;&#52;&#x31;&#x39;&#x2d;&#49;&#55;&#51;&#56;&#x2d;&#x34;&#x30;&#x41;&#x41;&#45;&#x41;&#x44;&#50;&#50;&#x2d;&#x30;&#x30;&#x31;&#x39;&#x33;&#x37;&#54;&#50;&#56;&#53;&#68;&#52;&#x37;&#x40;&#x65;&#x78;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a></td><td>59</td></tr><tr><td>8</td><td>F5058719-65AE-4C40-946C-29F20639749B8</td><td><a href="mailto:&#x46;&#x35;&#x30;&#53;&#56;&#55;&#49;&#x39;&#45;&#54;&#x35;&#x41;&#x45;&#45;&#x34;&#67;&#x34;&#x30;&#x2d;&#x39;&#52;&#x36;&#x43;&#x2d;&#x32;&#x39;&#x46;&#50;&#48;&#54;&#x33;&#57;&#55;&#x34;&#x39;&#x42;&#x38;&#64;&#101;&#x78;&#97;&#x6d;&#112;&#108;&#101;&#46;&#99;&#111;&#109;">&#x46;&#x35;&#x30;&#53;&#56;&#55;&#49;&#x39;&#45;&#54;&#x35;&#x41;&#x45;&#45;&#x34;&#67;&#x34;&#x30;&#x2d;&#x39;&#52;&#x36;&#x43;&#x2d;&#x32;&#x39;&#x46;&#50;&#48;&#54;&#x33;&#57;&#55;&#x34;&#x39;&#x42;&#x38;&#64;&#101;&#x78;&#97;&#x6d;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</a></td><td>42</td></tr><tr><td>9</td><td>E451B6E2-D910-4C95-9742-29BBB1766ECA9</td><td><a href="mailto:&#x45;&#52;&#x35;&#49;&#x42;&#54;&#x45;&#x32;&#x2d;&#68;&#57;&#49;&#x30;&#45;&#x34;&#x43;&#57;&#53;&#45;&#x39;&#55;&#x34;&#50;&#x2d;&#50;&#x39;&#66;&#66;&#66;&#49;&#x37;&#x36;&#x36;&#x45;&#67;&#65;&#57;&#x40;&#101;&#x78;&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;">&#x45;&#52;&#x35;&#49;&#x42;&#54;&#x45;&#x32;&#x2d;&#68;&#57;&#49;&#x30;&#45;&#x34;&#x43;&#57;&#53;&#45;&#x39;&#55;&#x34;&#50;&#x2d;&#50;&#x39;&#66;&#66;&#66;&#49;&#x37;&#x36;&#x36;&#x45;&#67;&#65;&#57;&#x40;&#101;&#x78;&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;</a></td><td>25</td></tr></tbody></table><h1 id="Create-auditing-table"><a href="#Create-auditing-table" class="headerlink" title="Create auditing table"></a>Create auditing table</h1><p>Firstly, you need to clone entire <code>Users</code> table to <code>Users_History</code>, I added <code>Trigger_Date</code> and <code>Trigger_Action</code> in order to use later</p><pre><code class="highlight SQL"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">INTO</span> Users_History<span class="keyword">FROM</span> Users<span class="keyword">WHERE</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">0</span><span class="keyword">ALTER TABLE</span> Users_History<span class="keyword">ADD</span> [Trigger_Date] DATETIME <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> GETDATE(),    [Trigger_Action] <span class="type">VARCHAR</span>(<span class="number">12</span>)GO</code></pre><p>Next, create trigger called <code>TrackUsers</code>, this SQL script creates or alters a trigger named <code>TrackUsers</code> on the <code>Users</code> table. The trigger is set <strong>to execute with the permissions of the owner</strong> and is configured to fire after any DELETE, UPDATE, or INSERT operations on the <code>Users</code> table.</p><ul><li><p>Within the trigger, the <code>SET IDENTITY_INSERT Users_History ON;</code> statement allows for explicit insertion of identity values into the <code>Users_History</code> table, which is presumably an audit or history table tracking changes to the <code>Users</code> table.</p></li><li><p>The trigger then uses conditional logic to determine the type of operation (DELETE, UPDATE, or INSERT) and inserts corresponding records into the <code>Users_History</code> table. The GETDATE() function is used to capture the timestamp of the trigger action, and the CONCAT function is employed to construct the <code>Trigger_Action</code> column indicating whether it’s an INSERT, UPDATE (before or after), or DELETE operation.</p></li><li><p>Finally, the <code>SET IDENTITY_INSERT Users_History OFF;</code> statement is used to revert the identity insert setting, ensuring that subsequent operations on the ‘Users_History’ table behave as usual.</p></li></ul><pre><code class="highlight SQL"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">ALTER</span> <span class="keyword">TRIGGER</span> TrackUsers<span class="keyword">ON</span> Users<span class="keyword">WITH</span> <span class="keyword">EXECUTE</span> <span class="keyword">AS</span> OWNERAFTER <span class="keyword">DELETE</span>, <span class="keyword">UPDATE</span>, <span class="keyword">INSERT</span><span class="keyword">AS</span><span class="keyword">BEGIN</span>    <span class="keyword">SET</span> IDENTITY_INSERT Users_History <span class="keyword">ON</span>;    <span class="keyword">DECLARE</span> <span class="variable">@Operation</span> <span class="type">CHAR</span>(<span class="number">12</span>);    IF (<span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> inserted))    <span class="keyword">BEGIN</span>        IF (<span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> deleted))        <span class="keyword">BEGIN</span>            <span class="comment">-- rows in both have to be an UPDATE</span>            <span class="keyword">SET</span> <span class="variable">@Operation</span> <span class="operator">=</span> <span class="string">&#x27;Update&#x27;</span>;            <span class="keyword">INSERT INTO</span> Users_History(UserID, Username, Email, Age, [Trigger_Date], [Trigger_Action])             <span class="keyword">SELECT</span> <span class="operator">*</span>, GETDATE(), CONCAT(<span class="string">&#x27;After&#x27;</span>, <span class="variable">@Operation</span>)             <span class="keyword">FROM</span> inserted;            <span class="keyword">INSERT INTO</span> Users_History(UserID, Username, Email, Age, [Trigger_Date], [Trigger_Action])             <span class="keyword">SELECT</span> <span class="operator">*</span>, GETDATE(), CONCAT(<span class="string">&#x27;Before&#x27;</span>, <span class="variable">@Operation</span>)             <span class="keyword">FROM</span> deleted;        <span class="keyword">END</span>;        <span class="keyword">ELSE</span>        <span class="keyword">BEGIN</span>            <span class="comment">-- no rows in &quot;deleted,&quot; has to be an INSERT</span>            <span class="keyword">SET</span> <span class="variable">@Operation</span> <span class="operator">=</span> <span class="string">&#x27;Insert&#x27;</span>;            <span class="keyword">INSERT INTO</span> Users_History(UserID, Username, Email, Age, [Trigger_Date], [Trigger_Action])             <span class="keyword">SELECT</span> <span class="operator">*</span>, GETDATE(), <span class="variable">@Operation</span>             <span class="keyword">FROM</span> inserted;        <span class="keyword">END</span>;    <span class="keyword">END</span>;    <span class="keyword">ELSE</span>    <span class="keyword">BEGIN</span>        <span class="comment">-- no rows in &quot;inserted,&quot; has to be a DELETE</span>        <span class="keyword">SET</span> <span class="variable">@Operation</span> <span class="operator">=</span> <span class="string">&#x27;Delete&#x27;</span>;        <span class="keyword">INSERT INTO</span> Users_History(UserID, Username, Email, Age, [Trigger_Date], [Trigger_Action])         <span class="keyword">SELECT</span> <span class="operator">*</span>, GETDATE(), <span class="variable">@Operation</span>         <span class="keyword">FROM</span> deleted;    <span class="keyword">END</span>;    <span class="keyword">SET</span> IDENTITY_INSERT Users_History OFF;<span class="keyword">END</span>;</code></pre><p>Now for any change associated with <code>Users</code>, it will be inserted in <code>Users_History</code> table as well.<br><img src="/images/pasted-24.png"></p><h1 id="Update-data"><a href="#Update-data" class="headerlink" title="Update data"></a>Update data</h1><p>This SQL script is designed to perform an update operation on a specified field in a given source table named <code>Users.</code> The script begins by declaring variables to hold the source table name <code>@source_table</code>, the field to be updated <code>@update_field_name</code>, and the new value for the update <code>@update_field_value</code>.</p><p>A dynamic SQL statement is then constructed to achieve the following steps:</p><ul><li>A temporary table <code>#TempTable_</code> is created with a random name generated using NEWID(). It stores 50 percent of the records from the source table, selected randomly.</li><li>The source table is updated by setting the specified field <code>@update_field_name</code> to the provided value <code>@update_field_value</code> for records that match the ones in the temporary table.</li><li>Subsequently, the source table is further updated by setting the specified field to the value in the temporary table, ensuring that the updated values are consistent across records.</li><li>Finally, the temporary table is dropped to clean up the temporary storage.</li></ul><p>The script utilizes dynamic SQL (sp_executesql) to execute the constructed SQL statement. This dynamic approach allows for flexibility in table and field names, making it adaptable for various scenarios where dynamic queries are necessary.</p><pre><code class="highlight SQL"><span class="keyword">DECLARE</span> <span class="variable">@source_table</span> <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="operator">=</span> <span class="string">&#x27;Users&#x27;</span><span class="keyword">DECLARE</span> <span class="variable">@update_field_name</span> <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="operator">=</span> <span class="string">&#x27;Age&#x27;</span><span class="keyword">DECLARE</span> <span class="variable">@update_field_value</span> <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="operator">=</span> <span class="string">&#x27;&#x27;&#x27;30&#x27;&#x27;&#x27;</span><span class="keyword">DECLARE</span> <span class="variable">@sql</span> NVARCHAR(MAX);<span class="keyword">DECLARE</span> <span class="variable">@temp_table</span> <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="operator">=</span> N<span class="string">&#x27;#TempTable_&#x27;</span> <span class="operator">+</span> REPLACE(NEWID(), <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&#x27;</span>);<span class="comment">-- Generate the dynamic SQL statement</span><span class="keyword">SET</span> <span class="variable">@sql</span> <span class="operator">=</span> N<span class="string">&#x27;</span><span class="string">    SELECT TOP 50 PERCENT UserID, &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@update_field_name</span>) <span class="operator">+</span> N<span class="string">&#x27;</span><span class="string">    INTO &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@temp_table</span>) <span class="operator">+</span> N<span class="string">&#x27;</span><span class="string">    FROM &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@source_table</span>) <span class="operator">+</span> N<span class="string">&#x27; </span><span class="string">    ORDER BY NEWID();</span><span class="string"></span><span class="string">    UPDATE p</span><span class="string">    SET &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@update_field_name</span>) <span class="operator">+</span> N<span class="string">&#x27; = &#x27;</span><span class="operator">+</span> <span class="variable">@update_field_value</span> <span class="operator">+</span> N<span class="string">&#x27;</span><span class="string">    FROM &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@source_table</span>) <span class="operator">+</span> N<span class="string">&#x27; p</span><span class="string">    JOIN &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@temp_table</span>) <span class="operator">+</span> N<span class="string">&#x27; t ON p.UserID = t.UserID;</span><span class="string"></span><span class="string">    UPDATE p</span><span class="string">    SET &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@update_field_name</span>) <span class="operator">+</span> N<span class="string">&#x27; = t.&#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@update_field_name</span>) <span class="operator">+</span> N<span class="string">&#x27;</span><span class="string">    FROM &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@source_table</span>) <span class="operator">+</span> N<span class="string">&#x27; p</span><span class="string">    JOIN &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@temp_table</span>) <span class="operator">+</span> N<span class="string">&#x27; t ON p.UserID = t.UserID;</span><span class="string"></span><span class="string">    DROP TABLE &#x27;</span> <span class="operator">+</span> QUOTENAME(<span class="variable">@temp_table</span>) <span class="operator">+</span> N<span class="string">&#x27;;</span><span class="string">    &#x27;</span>;<span class="comment">-- Execute the dynamic SQL statement</span><span class="keyword">EXEC</span> sp_executesql <span class="variable">@sql</span>;</code></pre><p>The results will look like:</p><pre><code class="highlight text">Started executing query at Line 155(25 rows affected)(25 rows affected)(25 rows affected)(25 rows affected)(25 rows affected)(25 rows affected)(25 rows affected)Total execution time: 00:00:00.109</code></pre><p>I use this condition to narrow down result set:</p><pre><code class="highlight SQL"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Users_History <span class="keyword">where</span> UserID <span class="operator">&lt;=</span> <span class="number">9</span> <span class="keyword">order</span> <span class="keyword">by</span> UserID</code></pre><table><thead><tr><th>UserID</th><th>Username</th><th>Email</th><th>Age</th><th>Trigger_Date</th><th>Trigger_Action</th></tr></thead><tbody><tr><td>2</td><td>040D7C77-2524-40C9-B255-7B1E9C86E83B2</td><td><a href="mailto:&#48;&#x34;&#48;&#x44;&#55;&#x43;&#x37;&#x37;&#45;&#x32;&#53;&#50;&#52;&#45;&#x34;&#x30;&#x43;&#57;&#45;&#66;&#x32;&#x35;&#x35;&#45;&#x37;&#x42;&#49;&#x45;&#x39;&#x43;&#56;&#x36;&#x45;&#56;&#x33;&#x42;&#50;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#x63;&#111;&#109;">&#48;&#x34;&#48;&#x44;&#55;&#x43;&#x37;&#x37;&#45;&#x32;&#53;&#50;&#52;&#45;&#x34;&#x30;&#x43;&#57;&#45;&#66;&#x32;&#x35;&#x35;&#45;&#x37;&#x42;&#49;&#x45;&#x39;&#x43;&#56;&#x36;&#x45;&#56;&#x33;&#x42;&#50;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#x63;&#111;&#109;</a></td><td>30</td><td>2023-12-23 02:10:13.140</td><td>AfterUpdate</td></tr><tr><td>2</td><td>040D7C77-2524-40C9-B255-7B1E9C86E83B2</td><td><a href="mailto:&#x30;&#x34;&#x30;&#x44;&#55;&#x43;&#55;&#55;&#45;&#x32;&#x35;&#50;&#x34;&#x2d;&#x34;&#x30;&#x43;&#57;&#x2d;&#66;&#50;&#x35;&#53;&#x2d;&#x37;&#x42;&#49;&#69;&#x39;&#67;&#x38;&#54;&#69;&#56;&#x33;&#x42;&#x32;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#46;&#99;&#x6f;&#109;">&#x30;&#x34;&#x30;&#x44;&#55;&#x43;&#55;&#55;&#45;&#x32;&#x35;&#50;&#x34;&#x2d;&#x34;&#x30;&#x43;&#57;&#x2d;&#66;&#50;&#x35;&#53;&#x2d;&#x37;&#x42;&#49;&#69;&#x39;&#67;&#x38;&#54;&#69;&#56;&#x33;&#x42;&#x32;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#46;&#99;&#x6f;&#109;</a></td><td>42</td><td>2023-12-23 02:10:13.140</td><td>BeforeUpdate</td></tr><tr><td>2</td><td>040D7C77-2524-40C9-B255-7B1E9C86E83B2</td><td><a href="mailto:&#48;&#52;&#48;&#68;&#55;&#67;&#55;&#x37;&#45;&#50;&#53;&#x32;&#x34;&#x2d;&#52;&#x30;&#x43;&#57;&#45;&#66;&#50;&#53;&#x35;&#45;&#x37;&#66;&#x31;&#x45;&#x39;&#x43;&#56;&#x36;&#x45;&#56;&#51;&#66;&#50;&#x40;&#x65;&#x78;&#97;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#x6d;">&#48;&#52;&#48;&#68;&#55;&#67;&#55;&#x37;&#45;&#50;&#53;&#x32;&#x34;&#x2d;&#52;&#x30;&#x43;&#57;&#45;&#66;&#50;&#53;&#x35;&#45;&#x37;&#66;&#x31;&#x45;&#x39;&#x43;&#56;&#x36;&#x45;&#56;&#51;&#66;&#50;&#x40;&#x65;&#x78;&#97;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#x6d;</a></td><td>42</td><td>2023-12-23 02:10:13.167</td><td>AfterUpdate</td></tr><tr><td>2</td><td>040D7C77-2524-40C9-B255-7B1E9C86E83B2</td><td><a href="mailto:&#x30;&#x34;&#48;&#x44;&#55;&#x43;&#55;&#55;&#x2d;&#x32;&#x35;&#50;&#52;&#x2d;&#x34;&#x30;&#67;&#x39;&#x2d;&#x42;&#50;&#53;&#53;&#45;&#55;&#x42;&#49;&#x45;&#x39;&#67;&#x38;&#x36;&#69;&#56;&#x33;&#x42;&#x32;&#64;&#101;&#120;&#97;&#x6d;&#112;&#x6c;&#x65;&#46;&#99;&#x6f;&#x6d;">&#x30;&#x34;&#48;&#x44;&#55;&#x43;&#55;&#55;&#x2d;&#x32;&#x35;&#50;&#52;&#x2d;&#x34;&#x30;&#67;&#x39;&#x2d;&#x42;&#50;&#53;&#53;&#45;&#55;&#x42;&#49;&#x45;&#x39;&#67;&#x38;&#x36;&#69;&#56;&#x33;&#x42;&#x32;&#64;&#101;&#120;&#97;&#x6d;&#112;&#x6c;&#x65;&#46;&#99;&#x6f;&#x6d;</a></td><td>30</td><td>2023-12-23 02:10:13.167</td><td>BeforeUpdate</td></tr><tr><td>3</td><td>E22CB32D-5700-4DCE-AC5F-357984A7FEE83</td><td><a href="mailto:&#69;&#50;&#50;&#67;&#66;&#x33;&#50;&#68;&#x2d;&#x35;&#x37;&#x30;&#48;&#45;&#x34;&#68;&#67;&#69;&#45;&#65;&#67;&#53;&#x46;&#x2d;&#51;&#x35;&#55;&#x39;&#x38;&#52;&#65;&#55;&#70;&#x45;&#69;&#56;&#51;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#x6f;&#x6d;">&#69;&#50;&#50;&#67;&#66;&#x33;&#50;&#68;&#x2d;&#x35;&#x37;&#x30;&#48;&#45;&#x34;&#68;&#67;&#69;&#45;&#65;&#67;&#53;&#x46;&#x2d;&#51;&#x35;&#55;&#x39;&#x38;&#52;&#65;&#55;&#70;&#x45;&#69;&#56;&#51;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>30</td><td>2023-12-23 02:10:13.167</td><td>BeforeUpdate</td></tr><tr><td>3</td><td>E22CB32D-5700-4DCE-AC5F-357984A7FEE83</td><td><a href="mailto:&#x45;&#x32;&#50;&#67;&#x42;&#51;&#50;&#x44;&#45;&#x35;&#55;&#48;&#x30;&#x2d;&#52;&#x44;&#x43;&#x45;&#45;&#x41;&#x43;&#53;&#x46;&#45;&#x33;&#53;&#55;&#x39;&#x38;&#52;&#x41;&#55;&#x46;&#69;&#x45;&#x38;&#51;&#64;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#109;">&#x45;&#x32;&#50;&#67;&#x42;&#51;&#50;&#x44;&#45;&#x35;&#55;&#48;&#x30;&#x2d;&#52;&#x44;&#x43;&#x45;&#45;&#x41;&#x43;&#53;&#x46;&#45;&#x33;&#53;&#55;&#x39;&#x38;&#52;&#x41;&#55;&#x46;&#69;&#x45;&#x38;&#51;&#64;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#109;</a></td><td>36</td><td>2023-12-23 02:10:13.167</td><td>AfterUpdate</td></tr><tr><td>3</td><td>E22CB32D-5700-4DCE-AC5F-357984A7FEE83</td><td><a href="mailto:&#69;&#x32;&#50;&#67;&#66;&#x33;&#x32;&#x44;&#x2d;&#x35;&#55;&#x30;&#48;&#x2d;&#x34;&#x44;&#67;&#69;&#45;&#65;&#x43;&#x35;&#x46;&#45;&#51;&#x35;&#x37;&#x39;&#56;&#x34;&#65;&#55;&#x46;&#x45;&#x45;&#56;&#51;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#109;">&#69;&#x32;&#50;&#67;&#66;&#x33;&#x32;&#x44;&#x2d;&#x35;&#55;&#x30;&#48;&#x2d;&#x34;&#x44;&#67;&#69;&#45;&#65;&#x43;&#x35;&#x46;&#45;&#51;&#x35;&#x37;&#x39;&#56;&#x34;&#65;&#55;&#x46;&#x45;&#x45;&#56;&#51;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#109;</a></td><td>36</td><td>2023-12-23 02:10:13.140</td><td>BeforeUpdate</td></tr><tr><td>3</td><td>E22CB32D-5700-4DCE-AC5F-357984A7FEE83</td><td><a href="mailto:&#69;&#50;&#x32;&#67;&#66;&#x33;&#50;&#x44;&#45;&#53;&#x37;&#48;&#48;&#45;&#52;&#x44;&#x43;&#x45;&#45;&#65;&#67;&#53;&#70;&#45;&#51;&#53;&#x37;&#57;&#x38;&#x34;&#65;&#55;&#70;&#69;&#69;&#56;&#51;&#64;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#x2e;&#99;&#111;&#x6d;">&#69;&#50;&#x32;&#67;&#66;&#x33;&#50;&#x44;&#45;&#53;&#x37;&#48;&#48;&#45;&#52;&#x44;&#x43;&#x45;&#45;&#65;&#67;&#53;&#70;&#45;&#51;&#53;&#x37;&#57;&#x38;&#x34;&#65;&#55;&#70;&#69;&#69;&#56;&#51;&#64;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#x2e;&#99;&#111;&#x6d;</a></td><td>30</td><td>2023-12-23 02:10:13.140</td><td>AfterUpdate</td></tr><tr><td>4</td><td>D3DCBFE8-3EA4-4DF6-A469-FDEE36A221854</td><td><a href="mailto:&#68;&#x33;&#x44;&#x43;&#66;&#x46;&#69;&#56;&#45;&#51;&#x45;&#65;&#x34;&#x2d;&#x34;&#68;&#x46;&#x36;&#x2d;&#65;&#52;&#54;&#x39;&#45;&#70;&#68;&#69;&#69;&#51;&#x36;&#65;&#50;&#x32;&#x31;&#x38;&#x35;&#x34;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#109;">&#68;&#x33;&#x44;&#x43;&#66;&#x46;&#69;&#56;&#45;&#51;&#x45;&#65;&#x34;&#x2d;&#x34;&#68;&#x46;&#x36;&#x2d;&#65;&#52;&#54;&#x39;&#45;&#70;&#68;&#69;&#69;&#51;&#x36;&#65;&#50;&#x32;&#x31;&#x38;&#x35;&#x34;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#109;</a></td><td>30</td><td>2023-12-23 02:10:13.140</td><td>AfterUpdate</td></tr><tr><td>4</td><td>D3DCBFE8-3EA4-4DF6-A469-FDEE36A221854</td><td><a href="mailto:&#x44;&#x33;&#x44;&#67;&#x42;&#x46;&#69;&#x38;&#x2d;&#51;&#x45;&#x41;&#x34;&#x2d;&#x34;&#x44;&#x46;&#x36;&#45;&#65;&#x34;&#x36;&#57;&#x2d;&#x46;&#68;&#69;&#x45;&#x33;&#x36;&#x41;&#50;&#x32;&#49;&#56;&#x35;&#x34;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;">&#x44;&#x33;&#x44;&#67;&#x42;&#x46;&#69;&#x38;&#x2d;&#51;&#x45;&#x41;&#x34;&#x2d;&#x34;&#x44;&#x46;&#x36;&#45;&#65;&#x34;&#x36;&#57;&#x2d;&#x46;&#68;&#69;&#x45;&#x33;&#x36;&#x41;&#50;&#x32;&#49;&#56;&#x35;&#x34;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;</a></td><td>31</td><td>2023-12-23 02:10:13.140</td><td>BeforeUpdate</td></tr><tr><td>4</td><td>D3DCBFE8-3EA4-4DF6-A469-FDEE36A221854</td><td><a href="mailto:&#x44;&#x33;&#x44;&#x43;&#x42;&#x46;&#x45;&#56;&#x2d;&#x33;&#69;&#x41;&#x34;&#x2d;&#52;&#x44;&#70;&#54;&#45;&#65;&#52;&#x36;&#x39;&#x2d;&#x46;&#x44;&#x45;&#69;&#x33;&#x36;&#x41;&#50;&#50;&#x31;&#x38;&#x35;&#x34;&#64;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;">&#x44;&#x33;&#x44;&#x43;&#x42;&#x46;&#x45;&#56;&#x2d;&#x33;&#69;&#x41;&#x34;&#x2d;&#52;&#x44;&#70;&#54;&#45;&#65;&#52;&#x36;&#x39;&#x2d;&#x46;&#x44;&#x45;&#69;&#x33;&#x36;&#x41;&#50;&#50;&#x31;&#x38;&#x35;&#x34;&#64;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>31</td><td>2023-12-23 02:10:13.167</td><td>AfterUpdate</td></tr><tr><td>4</td><td>D3DCBFE8-3EA4-4DF6-A469-FDEE36A221854</td><td><a href="mailto:&#x44;&#x33;&#68;&#67;&#66;&#x46;&#69;&#56;&#45;&#51;&#x45;&#65;&#52;&#45;&#52;&#68;&#70;&#x36;&#45;&#x41;&#52;&#54;&#57;&#x2d;&#x46;&#68;&#69;&#x45;&#51;&#x36;&#x41;&#50;&#x32;&#x31;&#x38;&#53;&#x34;&#x40;&#x65;&#120;&#97;&#x6d;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;">&#x44;&#x33;&#68;&#67;&#66;&#x46;&#69;&#56;&#45;&#51;&#x45;&#65;&#52;&#45;&#52;&#68;&#70;&#x36;&#45;&#x41;&#52;&#54;&#57;&#x2d;&#x46;&#68;&#69;&#x45;&#51;&#x36;&#x41;&#50;&#x32;&#x31;&#x38;&#53;&#x34;&#x40;&#x65;&#120;&#97;&#x6d;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a></td><td>30</td><td>2023-12-23 02:10:13.167</td><td>BeforeUpdate</td></tr><tr><td>5</td><td>03F0B9C3-8455-4703-A3BB-631D24ECF2DC5</td><td><a href="mailto:&#x30;&#51;&#x46;&#48;&#66;&#57;&#x43;&#x33;&#45;&#x38;&#x34;&#53;&#x35;&#45;&#52;&#55;&#x30;&#x33;&#45;&#x41;&#x33;&#66;&#66;&#x2d;&#54;&#51;&#49;&#68;&#x32;&#x34;&#69;&#x43;&#x46;&#50;&#68;&#67;&#53;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#x6f;&#109;">&#x30;&#51;&#x46;&#48;&#66;&#57;&#x43;&#x33;&#45;&#x38;&#x34;&#53;&#x35;&#45;&#52;&#55;&#x30;&#x33;&#45;&#x41;&#x33;&#66;&#66;&#x2d;&#54;&#51;&#49;&#68;&#x32;&#x34;&#69;&#x43;&#x46;&#50;&#68;&#67;&#53;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#x6f;&#109;</a></td><td>30</td><td>2023-12-23 02:10:13.167</td><td>BeforeUpdate</td></tr><tr><td>5</td><td>03F0B9C3-8455-4703-A3BB-631D24ECF2DC5</td><td><a href="mailto:&#x30;&#51;&#70;&#x30;&#x42;&#x39;&#67;&#51;&#45;&#56;&#52;&#53;&#53;&#45;&#52;&#55;&#48;&#x33;&#x2d;&#65;&#51;&#x42;&#66;&#45;&#54;&#x33;&#x31;&#68;&#50;&#x34;&#69;&#x43;&#70;&#x32;&#x44;&#67;&#53;&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;">&#x30;&#51;&#70;&#x30;&#x42;&#x39;&#67;&#51;&#45;&#56;&#52;&#53;&#53;&#45;&#52;&#55;&#48;&#x33;&#x2d;&#65;&#51;&#x42;&#66;&#45;&#54;&#x33;&#x31;&#68;&#50;&#x34;&#69;&#x43;&#70;&#x32;&#x44;&#67;&#53;&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;</a></td><td>52</td><td>2023-12-23 02:10:13.167</td><td>AfterUpdate</td></tr><tr><td>5</td><td>03F0B9C3-8455-4703-A3BB-631D24ECF2DC5</td><td><a href="mailto:&#48;&#51;&#x46;&#48;&#x42;&#x39;&#x43;&#x33;&#45;&#56;&#x34;&#x35;&#53;&#45;&#x34;&#x37;&#x30;&#51;&#45;&#65;&#x33;&#66;&#x42;&#x2d;&#54;&#51;&#49;&#68;&#50;&#x34;&#x45;&#x43;&#x46;&#50;&#68;&#x43;&#x35;&#x40;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#48;&#51;&#x46;&#48;&#x42;&#x39;&#x43;&#x33;&#45;&#56;&#x34;&#x35;&#53;&#45;&#x34;&#x37;&#x30;&#51;&#45;&#65;&#x33;&#66;&#x42;&#x2d;&#54;&#51;&#49;&#68;&#50;&#x34;&#x45;&#x43;&#x46;&#50;&#68;&#x43;&#x35;&#x40;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a></td><td>52</td><td>2023-12-23 02:10:13.140</td><td>BeforeUpdate</td></tr><tr><td>5</td><td>03F0B9C3-8455-4703-A3BB-631D24ECF2DC5</td><td><a href="mailto:&#x30;&#x33;&#x46;&#48;&#66;&#57;&#67;&#51;&#45;&#x38;&#52;&#53;&#x35;&#x2d;&#52;&#55;&#48;&#x33;&#45;&#65;&#x33;&#x42;&#x42;&#45;&#x36;&#51;&#x31;&#68;&#x32;&#52;&#69;&#x43;&#70;&#x32;&#x44;&#67;&#53;&#x40;&#x65;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#46;&#x63;&#111;&#109;">&#x30;&#x33;&#x46;&#48;&#66;&#57;&#67;&#51;&#45;&#x38;&#52;&#53;&#x35;&#x2d;&#52;&#55;&#48;&#x33;&#45;&#65;&#x33;&#x42;&#x42;&#45;&#x36;&#51;&#x31;&#68;&#x32;&#52;&#69;&#x43;&#70;&#x32;&#x44;&#67;&#53;&#x40;&#x65;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#46;&#x63;&#111;&#109;</a></td><td>30</td><td>2023-12-23 02:10:13.140</td><td>AfterUpdate</td></tr><tr><td>9</td><td>E451B6E2-D910-4C95-9742-29BBB1766ECA9</td><td><a href="mailto:&#69;&#52;&#x35;&#49;&#x42;&#x36;&#69;&#50;&#45;&#x44;&#57;&#49;&#x30;&#x2d;&#x34;&#67;&#57;&#53;&#45;&#57;&#55;&#x34;&#x32;&#x2d;&#x32;&#57;&#66;&#x42;&#x42;&#x31;&#x37;&#x36;&#54;&#69;&#67;&#x41;&#57;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;">&#69;&#52;&#x35;&#49;&#x42;&#x36;&#69;&#50;&#45;&#x44;&#57;&#49;&#x30;&#x2d;&#x34;&#67;&#57;&#53;&#45;&#57;&#55;&#x34;&#x32;&#x2d;&#x32;&#57;&#66;&#x42;&#x42;&#x31;&#x37;&#x36;&#54;&#69;&#67;&#x41;&#57;&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;</a></td><td>30</td><td>2023-12-23 02:10:13.140</td><td>AfterUpdate</td></tr><tr><td>9</td><td>E451B6E2-D910-4C95-9742-29BBB1766ECA9</td><td><a href="mailto:&#x45;&#x34;&#x35;&#x31;&#66;&#54;&#69;&#50;&#45;&#68;&#x39;&#x31;&#48;&#45;&#52;&#67;&#x39;&#53;&#45;&#57;&#x37;&#52;&#x32;&#45;&#x32;&#x39;&#66;&#x42;&#66;&#49;&#x37;&#x36;&#x36;&#69;&#x43;&#x41;&#57;&#64;&#101;&#120;&#97;&#109;&#x70;&#x6c;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#x45;&#x34;&#x35;&#x31;&#66;&#54;&#69;&#50;&#45;&#68;&#x39;&#x31;&#48;&#45;&#52;&#67;&#x39;&#53;&#45;&#57;&#x37;&#52;&#x32;&#45;&#x32;&#x39;&#66;&#x42;&#66;&#49;&#x37;&#x36;&#x36;&#69;&#x43;&#x41;&#57;&#64;&#101;&#120;&#97;&#109;&#x70;&#x6c;&#x65;&#46;&#x63;&#x6f;&#x6d;</a></td><td>25</td><td>2023-12-23 02:10:13.140</td><td>BeforeUpdate</td></tr><tr><td>9</td><td>E451B6E2-D910-4C95-9742-29BBB1766ECA9</td><td><a href="mailto:&#69;&#x34;&#x35;&#x31;&#66;&#x36;&#69;&#x32;&#x2d;&#x44;&#x39;&#x31;&#48;&#x2d;&#x34;&#x43;&#x39;&#x35;&#45;&#57;&#55;&#x34;&#x32;&#45;&#x32;&#57;&#x42;&#x42;&#66;&#x31;&#55;&#x36;&#x36;&#x45;&#x43;&#x41;&#x39;&#x40;&#101;&#x78;&#97;&#x6d;&#112;&#x6c;&#x65;&#46;&#99;&#x6f;&#109;">&#69;&#x34;&#x35;&#x31;&#66;&#x36;&#69;&#x32;&#x2d;&#x44;&#x39;&#x31;&#48;&#x2d;&#x34;&#x43;&#x39;&#x35;&#45;&#57;&#55;&#x34;&#x32;&#45;&#x32;&#57;&#x42;&#x42;&#66;&#x31;&#55;&#x36;&#x36;&#x45;&#x43;&#x41;&#x39;&#x40;&#101;&#x78;&#97;&#x6d;&#112;&#x6c;&#x65;&#46;&#99;&#x6f;&#109;</a></td><td>25</td><td>2023-12-23 02:10:13.167</td><td>AfterUpdate</td></tr><tr><td>9</td><td>E451B6E2-D910-4C95-9742-29BBB1766ECA9</td><td><a href="mailto:&#x45;&#x34;&#53;&#x31;&#66;&#x36;&#x45;&#x32;&#45;&#x44;&#57;&#49;&#48;&#x2d;&#52;&#67;&#57;&#53;&#45;&#57;&#55;&#52;&#50;&#45;&#50;&#x39;&#x42;&#x42;&#x42;&#x31;&#55;&#x36;&#x36;&#x45;&#67;&#x41;&#57;&#64;&#x65;&#x78;&#x61;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#x6f;&#109;">&#x45;&#x34;&#53;&#x31;&#66;&#x36;&#x45;&#x32;&#45;&#x44;&#57;&#49;&#48;&#x2d;&#52;&#67;&#57;&#53;&#45;&#57;&#55;&#52;&#50;&#45;&#50;&#x39;&#x42;&#x42;&#x42;&#x31;&#55;&#x36;&#x36;&#x45;&#67;&#x41;&#57;&#64;&#x65;&#x78;&#x61;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#x6f;&#109;</a></td><td>30</td><td>2023-12-23 02:10:13.167</td><td>BeforeUpdate</td></tr></tbody></table><p>Now you can easily retrieve the specific UserID to get its historical update.</p><h1 id="Limitation"><a href="#Limitation" class="headerlink" title="Limitation"></a>Limitation</h1><p>While trigger-based auditing can be useful, it comes with certain limitations and considerations:</p><ul><li><p>Performance Impact: Triggers can introduce overhead as they execute additional logic for each affected row. This can impact the performance of the operations that modify the audited table.</p></li><li><p>Nested Trigger Issues: If the audited table already has triggers, the addition of another trigger for auditing purposes can lead to nested trigger execution. This might result in unexpected behavior and performance issues. So please do not perform any trigger to <code>Users_History</code></p></li><li><p>Transaction Size: Large transactions can cause the trigger-based approach to consume significant resources, affecting performance and potentially causing timeouts.</p></li><li><p>No Rollback on Error: If an error occurs during the execution of the trigger, it might not be possible to roll back the entire transaction. This can lead to partial auditing or inconsistent data.</p></li><li><p>Data Volume: In high-volume systems, the volume of audit data generated by triggers can be substantial. Storing and managing large amounts of audit data may require additional resources.</p></li><li><p>Schema Changes: If the schema of the audited table changes, the trigger might need to be updated accordingly. Failure to do so could lead to errors or missing audit information. For example, you can add new column to <code>Users</code>, but cannot remove any existing column already tied to <code>Users_History</code>. If you need update, you have to drop <code>Users_History</code> and recreate trigger as well.</p></li><li><p>Concurrency Issues: Triggers may not handle concurrency well, especially in scenarios where multiple transactions are modifying the audited table simultaneously. This can lead to race conditions and potential data inconsistencies.</p></li><li><p>Maintenance Challenges: Managing and maintaining triggers across multiple tables can be challenging. Any changes to the auditing logic may require careful testing to ensure that it works as expected.</p></li><li><p>Security Concerns: Trigger-based auditing relies on the security context of the user executing the triggering operation. This may result in limited visibility into certain types of changes or operations.</p></li></ul><p>To overcome above concerns, please stay tunned for next series of SQL Server Track Data Changes Part 2: Change Tracking</p>]]></content>
      
      
      <categories>
          
          <category> SQL Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Trigger </tag>
            
            <tag> Stored Procedure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title> Deploying a Python Flask Application to Azure Web App Service with a Subdirectory Configuration</title>
      <link href="//post/2023/05/31/Deploying-a-Flask-Python-application-in-a-subdirectory-rather-than-the-wwwroot-directory.html"/>
      <url>//post/2023/05/31/Deploying-a-Flask-Python-application-in-a-subdirectory-rather-than-the-wwwroot-directory.html</url>
      
        <content type="html"><![CDATA[<p>In this blog post, we will explore the process of deploying a Python Flask application to Azure Web App Service (Linux). However, instead of deploying it to the default <code>wwwroot</code> directory, we will deploy it to a subdirectory within the web app. This approach offers flexibility and organization, allowing you to keep your application code separate from other files in the root directory.</p><hr><p><img src="/images/pasted-23.png" alt="Azure App Service"></p><p>When developing Python applications, it is common to start with a standalone .py file or a Jupyter notebook. However, as the application evolves and becomes more stable, it often becomes necessary to create an API host to facilitate collaboration and sharing within a team. By separating shared libraries from the Flask app, we can create a more modular and reusable solution that can be easily shared across teams.</p><p>In such cases, simply placing the Flask app in the wwwroot directory may not be the best choice. The wwwroot directory is typically reserved for web files, and mixing shared libraries with the Flask app can lead to cluttered code and potential conflicts.</p><p>Consider an example project structure as follows:</p><pre><code class="highlight text">root/- backend/  - app.py  - requirements.txt- libs/  - lib.py- configurations/  - *.json- main.py- jupyter/  - analysis.ipynb- others/</code></pre><p><code>libs/*</code> and <code>configurations/*</code> are shared among <code>backend/*, jupyter/*, main.py</code>. To ensure that the lib.py file can be accessed from both app.py and analysis.ipynb, you needed to add the parent path using the following code snippet:</p><pre><code class="highlight python"><span class="keyword">import</span> syssys.path.append(<span class="string">&#x27;..&#x27;</span>)</code></pre><p>By doing so, you were able to import the required library from the libs folder:</p><pre><code class="highlight python"><span class="keyword">from</span> libs.lib <span class="keyword">import</span> BaseGenerator, Generator<span class="keyword">import</span> libs.generator_utils <span class="keyword">as</span> gu</code></pre><p>However, when attempting to deploy your application to Azure Web App Service (Linux), you encountered the need to customize the deployment package, also known as the DevOps process. This is because the <code>Azure App Service Extension</code> with <code>Deploy To Web App</code> feature only packages the contents of the backend&#x2F; directory, and you preferred not to include the entire root directory in the deployment package.</p><p>So I have to achieve 3 objectives</p><ul><li>Compress selected directories into a zip file: Create a zip file that includes the necessary directories for deployment. These directories should be the ones you want to include under the root directory. Make sure to exclude any unnecessary files or directories.</li><li>Specify the main application to run: Within the compressed zip file, ensure that the server runs the main application located at backend&#x2F;app.py. This can typically be achieved by configuring the entry point in the Azure Web App Service settings or by providing a startup command in the deployment configuration.</li><li>Include requirements.txt in site&#x2F;wwwroot: As per Microsoft’s documentation, the requirements.txt file should be placed in the site&#x2F;wwwroot directory. When creating the zip file for deployment, make sure to include the requirements.txt file in the root location within the compressed package.</li></ul><blockquote><p>“Could not find setup.py or requirements.txt; Not running pip install.”: The Oryx build process failed to find your requirements.txt file.</p></blockquote><blockquote><p>Connect to the web app’s container via SSH and verify that requirements.txt is named correctly and exists directly under site&#x2F;wwwroot. If it doesn’t exist, make site the file exists in your repository and is included in your deployment. If it exists in a separate folder, move it to the root.</p></blockquote><p><a href="https://learn.microsoft.com/en-us/azure/app-service/configure-language-python#could-not-find-setuppy-or-requirementstxt">https://learn.microsoft.com/en-us/azure/app-service/configure-language-python#could-not-find-setuppy-or-requirementstxt</a></p><p>To restructure your project before compressing it into a zip file, you can move all the files to a new folder named <code>.deploy</code> under the root directory. The updated project structure would look like this:</p><pre><code class="highlight text">root/- .deploy/  - backend/*  - libs/*  - configurations/*  - requirements.txt- backend/  - app.py  - requirements.txt- libs/  - lib.py- configurations/  - *.json- main.py- jupyter/  - analysis.ipynb- others/</code></pre><p>I plan to utilize PowerShell to handle the copying and zipping tasks, ensuring that the resulting zip file contains the contents of the .deploy folder rather than including the folder itself. The Azure will use this as-in zip for operation</p><pre><code class="highlight powershell"><span class="variable">$zipFilePath</span> = <span class="string">&quot;app.zip&quot;</span><span class="variable">$mainDir</span> = <span class="string">&quot;backend&quot;</span><span class="variable">$externalDir</span> = <span class="selector-tag">@</span>(    <span class="variable">$mainDir</span>,    <span class="string">&quot;libs&quot;</span>,    <span class="string">&quot;configurations&quot;</span>,    <span class="string">&quot;<span class="variable">$mainDir</span>/requirements.txt&quot;</span>)<span class="comment"># Create new .deploy directory</span><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Force</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span> | <span class="built_in">Out-Null</span><span class="keyword">foreach</span> (<span class="variable">$dir</span> <span class="keyword">in</span> <span class="variable">$externalDir</span>) &#123;    <span class="built_in">Copy-Item</span> <span class="literal">-Path</span> <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> <span class="literal">-Destination</span> <span class="string">&quot;<span class="variable">$deploymentDir</span>&quot;</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span>&#125;<span class="built_in">Compress-Archive</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span>/* <span class="literal">-DestinationPath</span> <span class="variable">$zipFilePath</span> <span class="literal">-Force</span></code></pre><p>Next, you can reference the provided links to access the instructions and guidelines for deploying your application to Azure. </p><pre><code class="highlight powershell"><span class="variable">$resourceGroupName</span> = <span class="string">&quot;YOUR_RESOURCE_GROUP_NAME&quot;</span><span class="variable">$appName</span> = <span class="string">&quot;YOUR_APP_NAME&quot;</span><span class="variable">$zipFilePath</span> = <span class="string">&quot;app.zip&quot;</span>az webapp config appsettings <span class="built_in">set</span> <span class="literal">--name</span> <span class="string">&quot;<span class="variable">$appName</span>&quot;</span> <span class="literal">--resource-group</span> <span class="string">&quot;<span class="variable">$resourceGroupName</span>&quot;</span> <span class="literal">--settings</span> SCM_DO_BUILD_DURING_DEPLOYMENT=trueaz webapp deploy <span class="literal">--name</span> <span class="variable">$appName</span> <span class="literal">--resource-group</span> <span class="variable">$resourceGroupName</span> <span class="literal">--src-path</span> <span class="variable">$zipFilePath</span> <span class="literal">--type</span> zipaz webapp config <span class="built_in">set</span> <span class="literal">--name</span> <span class="string">&quot;<span class="variable">$appName</span>&quot;</span> <span class="literal">--resource-group</span> <span class="string">&quot;<span class="variable">$resourceGroupName</span>&quot;</span> <span class="literal">--startup-file</span> <span class="string">&quot;gunicorn --bind=0.0.0.0:8000 --chdir <span class="variable">$mainDir</span> app:app&quot;</span></code></pre><p><a href="https://learn.microsoft.com/en-us/azure/app-service/deploy-zip?tabs=cli">https://learn.microsoft.com/en-us/azure/app-service/deploy-zip?tabs=cli</a></p><p>You need to know your resouce group and app name, or id for your service within Azure Portal.</p><pre><code class="highlight powershell"><span class="variable">$resourceGroupName</span> = <span class="string">&quot;YOUR_RESOURCE_GROUP_NAME&quot;</span><span class="variable">$appName</span> = <span class="string">&quot;YOUR_APP_NAME&quot;</span></code></pre><p>Please note that setting the environment variable <code>SCM_DO_BUILD_DURING_DEPLOYMENT=true</code> in Azure means that Azure will automatically build your application during the deployment process. Additionally, the <code>requirements.txt</code> file will be used to install the required Python libraries.</p><p>The second command, <code>az webapp deploy</code>, is used to deploy the previously compressed <code>app.zip</code> file. This command initiates the deployment process and ensures that your application is uploaded to Azure Web App Service.</p><p>The third command, <code>az webapp config set</code>, is used to configure the startup command for your application. In this case, the <code>--startup-file</code> flag is set to <code>gunicorn --bind=0.0.0.0:8000 --chdir $mainDir app:app</code>. This command instructs <code>gunicorn</code> - a Python WSGI HTTP Server for UNIX, to start your application on port 8000. The <code>$mainDir</code> variable represents the main directory of your application.</p><p>For more information, you can read here: <a href="https://learn.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=flask,windows,azure-cli,vscode-deploy,deploy-instructions-azportal,terminal-bash,deploy-instructions-zip-azcli#1---sample-application">https://learn.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=flask%2Cwindows%2Cazure-cli%2Cvscode-deploy%2Cdeploy-instructions-azportal%2Cterminal-bash%2Cdeploy-instructions-zip-azcli#1---sample-application</a></p><p>By default, Azure App Service for Linux utilizes gunicorn. You can begin testing your application after the initial deployment of the Flask app, and you can use <code>os.environ</code> to debug and inspect the environment variables.</p><pre><code class="highlight python">os.environ.get(<span class="string">&quot;SERVER_SOFTWARE&quot;</span>, <span class="string">&quot;&quot;</span>)<span class="comment"># gunicorn/20.1.0</span></code></pre><p>Back to the third command, <code>--chdir $mainDir</code> will specify <code>backend</code> folder is the main directory, with <code>app:app</code> stands for <code>app.py</code> : <code>app</code> object name of Flask. </p><blockquote><p>Custom Flask main module: By default, App Service assumes that a Flask app’s main module is application.py or app.py. If your main module uses a different name, then you must customize the startup command. For example, if you have a Flask app whose main module is hello.py and the Flask app object in that file is named myapp, then the command is as follows:</p></blockquote><blockquote><p>gunicorn –bind&#x3D;0.0.0.0 –timeout 600 hello:myapp</p></blockquote><p>You can read more here: <a href="https://learn.microsoft.com/en-us/azure/app-service/configure-language-python#example-startup-commands">https://learn.microsoft.com/en-us/azure/app-service/configure-language-python#example-startup-commands</a></p><p>Last but not least, the <code>--bind=0.0.0.0</code> flag without specifying a port can cause an error because the server needs to know the specific port to bind to. By default, when you specify <code>--bind=0.0.0.0</code>, the server will attempt to bind to port 8000. However, in some cases, you may encounter an error indicating that the Docker container cannot bind to port 8000.</p><p>To resolve this issue, you correctly specified the port by using the <code>--bind=0.0.0.0:8000</code> flag. This explicitly tells the server to bind to port 8000, ensuring that it can properly listen for incoming connections.</p><p>By providing the port along with the –bind flag, you resolved the issue and allowed the server to bind to the specified port, enabling your application to work correctly.</p><p>Finally, it is recommended to clean up certain files and folders before and after the deployment. Here’s a simplified approach:</p><p>Before Deployment:</p><ul><li>Remove the .deploy folder, which contains the files and directories that were organized for deployment.</li></ul><p>After Deployment:</p><ul><li>Remove both the .deploy folder and the app.zip file that were used for the deployment. These files are no longer needed once the application is successfully deployed.</li></ul><pre><code class="highlight powershell"><span class="comment"># Remove previous</span><span class="keyword">if</span> (<span class="built_in">Test-Path</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span>) &#123;    <span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span>&#125;....<span class="comment"># Clean up the deployment files</span><span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="variable">$zipFilePath</span> <span class="literal">-Force</span><span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span> <span class="literal">-Recurse</span></code></pre><p>By doing that, you can maintain a clean and streamlined deployment process. This helps to avoid clutter and ensures that only the necessary files are present during and after the deployment.</p><p>Full powershell code</p><pre><code class="highlight powershell"><span class="variable">$resourceGroupName</span> = <span class="string">&quot;YOUR_RESOURCE_GROUP_NAME&quot;</span><span class="variable">$appName</span> = <span class="string">&quot;YOUR_APP_NAME&quot;</span><span class="variable">$zipFilePath</span> = <span class="string">&quot;app.zip&quot;</span><span class="variable">$mainDir</span> = <span class="string">&quot;backend&quot;</span><span class="variable">$externalDir</span> = <span class="selector-tag">@</span>(    <span class="variable">$mainDir</span>,    <span class="string">&quot;libs&quot;</span>,    <span class="string">&quot;configurations&quot;</span>,    <span class="string">&quot;<span class="variable">$mainDir</span>/requirements.txt&quot;</span>)<span class="comment"># Remove previous</span><span class="keyword">if</span> (<span class="built_in">Test-Path</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span>) &#123;    <span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span>&#125;<span class="comment"># Create new .deploy directory</span><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Force</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span> | <span class="built_in">Out-Null</span><span class="keyword">foreach</span> (<span class="variable">$dir</span> <span class="keyword">in</span> <span class="variable">$externalDir</span>) &#123;    <span class="built_in">Copy-Item</span> <span class="literal">-Path</span> <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> <span class="literal">-Destination</span> <span class="string">&quot;<span class="variable">$deploymentDir</span>&quot;</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span>&#125;<span class="built_in">Compress-Archive</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span>/* <span class="literal">-DestinationPath</span> <span class="variable">$zipFilePath</span> <span class="literal">-Force</span><span class="comment"># Deploy</span>az webapp config appsettings <span class="built_in">set</span> <span class="literal">--name</span> <span class="string">&quot;<span class="variable">$appName</span>&quot;</span> <span class="literal">--resource-group</span> <span class="string">&quot;<span class="variable">$resourceGroupName</span>&quot;</span> <span class="literal">--settings</span> SCM_DO_BUILD_DURING_DEPLOYMENT=trueaz webapp deploy <span class="literal">--name</span> <span class="variable">$appName</span> <span class="literal">--resource-group</span> <span class="variable">$resourceGroupName</span> <span class="literal">--src-path</span> <span class="variable">$zipFilePath</span> <span class="literal">--type</span> zipaz webapp config <span class="built_in">set</span> <span class="literal">--name</span> <span class="string">&quot;<span class="variable">$appName</span>&quot;</span> <span class="literal">--resource-group</span> <span class="string">&quot;<span class="variable">$resourceGroupName</span>&quot;</span> <span class="literal">--startup-file</span> <span class="string">&quot;gunicorn --bind=0.0.0.0:8000 --chdir <span class="variable">$mainDir</span> app:app&quot;</span><span class="comment"># Clean up the deployment files</span><span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="variable">$zipFilePath</span> <span class="literal">-Force</span><span class="built_in">Remove-Item</span> <span class="literal">-Path</span> <span class="variable">$deploymentDir</span> <span class="literal">-Recurse</span></code></pre><p>In conclusion, deploying a Flask Python application to Azure Web App Service requires careful consideration of file organization, configuration settings, and deployment steps. By following the recommended practices, such as structuring the project, customizing the deployment package, and configuring the startup command, you can successfully deploy your application to Azure.</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Powershell </category>
          
          <category> DevOps </category>
          
          <category> Flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cracking the Code: Mastering Redfin&#39;s Web Scraping Protection</title>
      <link href="//post/2023/05/12/Cracking-the-Code-Mastering-Redfin-s-Web-Scraping-Protection.html"/>
      <url>//post/2023/05/12/Cracking-the-Code-Mastering-Redfin-s-Web-Scraping-Protection.html</url>
      
        <content type="html"><![CDATA[<p>In this topic, we will delve into the intriguing world of web scraping protection on Redfin Houses - a well-known platform for real estate listings. The primary technique employed here involves utilizing HTTP requests with pure Python, eliminating the need for a web driver like Selenium. This approach allows us to utilize it in various environments, including Colab and non-browser-supported environments.</p><hr><p><img src="/images/pasted-15.png"></p><pre><code class="highlight Disclaimer">Before proceeding with the web scraping technique described herein, it is important to understand and acknowledge the legal and ethical implications associated with scraping web data. This disclaimer serves as a reminder that the use of web scraping tools or techniques to extract data from websites may be subject to legal restrictions or terms of service imposed by the website owners.</code></pre><p>Initially, I employed Postman to test the request, using the following link as an example: <a href="https://www.redfin.com/zipcode/10001/filter/include=sold-6mo">https://www.redfin.com/zipcode/10001/filter/include=sold-6mo</a>. </p><p>Regrettably, Redfin’s web scraping protection detected the suspicious request from Postman, resulting in an “Oops!” page being returned. You can see the screenshot below</p><p><img src="/images/pasted-17.png"></p><p>I then switched back to the Edge browser to explore the Network used for that request. To access it, you can press F12 and navigate to the Network tab.</p><p>My next step was to investigate whether there was any JSON data being transferred between the client and server. To do this, I pressed Ctrl + F and searched for the text “410 W 25th St,” referring to the first listing card. The results indicated that this data only existed in the main request homepage. You can refer to the screenshot below:</p><p><img src="/images/pasted-16.png"></p><p>Unfortunately, I discovered that no data was available for retrieval. It appears to be hidden using some React technique that I am unfamiliar with, but it’s quite intriguing.</p><p><img src="/images/pasted-18.png"></p><p>Considering the above processes, I decided back to Postman because I found that the original request could do <code>edit and resend</code> without any data loss, as there were no new headers, including updated cookies, and no access state handled yet. Thus, I assumed that the headers could be retrieved, and by manipulating them, I could create a deceptive pure HTTP request that exposed the data without involving JavaScript.</p><p>To achieve this, I clicked on “Edit and Resend,” which sent the request to another tab at the bottom of the Network Console. See the screenshot below:</p><p><img src="/images/pasted-20.png"></p><p>I successfully sent multiple requests using those headers without losing any data. Refer to the screenshot below:</p><p><img src="/images/pasted-19.png"></p><p>I will try to simulate that headers, by copying cURL (bash)</p><p><img src="/images/pasted-21.png"></p><p>Next, I attempted to simulate those headers by copying the cURL command (bash) and pasting it into an online converter such as <a href="https://curlconverter.com/">https://curlconverter.com/</a>. When I ran the converted code for the first time, it provided the desired response with the required data. The next step involved removing unnecessary elements one by one to reduce the size. See the screenshot below:</p><p><img src="/images/pasted-22.png"></p><p>Finally, I present a simplified code snippet that accomplishes the task:</p><pre><code class="highlight python"><span class="keyword">import</span> requestscookies = &#123;    <span class="string">&#x27;RF_UNBLOCK_ID&#x27;</span>: <span class="string">&#x27;avWazYWD&#x27;</span>,&#125;response = requests.get(<span class="string">&#x27;https://www.redfin.com/zipcode/10001/filter/include=sold-6mo&#x27;</span>, cookies=cookies)</code></pre><p>With these modifications, the remaining steps become much simpler. I will utilize BeautifulSoup to handle the HTML, specifically extracting the price and address fields for demonstration purposes:</p><pre><code class="highlight Python"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup<span class="keyword">import</span> requestscookies = &#123;    <span class="string">&#x27;RF_UNBLOCK_ID&#x27;</span>: <span class="string">&#x27;avWazYWD&#x27;</span>,&#125;response = requests.get(<span class="string">&#x27;https://www.redfin.com/zipcode/10001/filter/include=sold-6mo&#x27;</span>, cookies=cookies)soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)frames = soup.find_all(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;bottomV2&#x27;</span>&#125;)<span class="keyword">for</span> i <span class="keyword">in</span> frames:    price = i.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;homecardV2Price&#x27;</span>&#125;)    <span class="keyword">if</span> price <span class="keyword">is</span> <span class="literal">None</span>:        price = i.find(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;priceLabelV2 font-size-smaller&#x27;</span>&#125;)    <span class="built_in">print</span>(&#123;        <span class="string">&#x27;price&#x27;</span>: price.text,        <span class="string">&#x27;address&#x27;</span>: i.find(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;homeAddressV2&#x27;</span>&#125;).text    &#125;)</code></pre><p>The result obtained from executing the code is as follows:</p><pre><code class="highlight text">&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;410 W 25th St Unit PHB, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;357 W 29th St Unit GB, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;20 W 27th St #5, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;146 W 29th St Unit 9RE, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;408 W 34th St Unit 6B, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;11 W 30th St Unit 9-F, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;433 W 34th St Unit 3-E, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;520 W 27th St #601, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;315 Seventh Ave Unit 8C, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;144 W 27th St Unit 4F, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;252 Seventh Ave Unit 9O, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;252 Seventh Ave Unit 10X, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;252 Seventh Ave Unit 17C, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;225 W 25th St Unit 5E, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;408 W 25th St Unit 4FW, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;261 W 25th St Unit 3E, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;261 W 25th St Unit 3B, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;50 W 30th St Unit 4-C, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;1200 Broadway Unit 7A, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;520 W 28th St #10, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;15 Hudson Yards Unit 71E, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;522 W 29th St Unit 5-B, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27;$2,800,000&#x27;, &#x27;address&#x27;: &#x27;233 W 26th St Unit 7-E, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #6101, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #5704, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #5702, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #5901, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27;$2,750,000&#x27;, &#x27;address&#x27;: &#x27;1182 Broadway Unit 13A, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #8102, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #6001, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;215 W 28th St Unit 14B, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;215 W 28th St Unit 8D, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #5302, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #5502, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #6201, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #6202, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #8103, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #8201, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;35 Hudson Yards #8501, New York, NY 10001&#x27;&#125;&#123;&#x27;price&#x27;: &#x27; Sign in for price &#x27;, &#x27;address&#x27;: &#x27;25 W 28th St Ph 40D, New York, NY 10001&#x27;&#125;</code></pre><p>It is worth noting that in the near future, the hardcoded cookie <code>RF_UNBLOCK_ID&#39;: &#39;avWazYWD&#39;</code> may change. However, we can address this by making an initial request to renew the RF-UNBLOCK_ID and subsequently using it for future requests.</p><p>To further enhance the functionality to show <code>Sign in for price</code>, one possibility would be to implement a sign-in process and apply the same techniques to obtain and utilize the relevant cookies associated with a logged-in session. This would allow for access to specific prices and potentially provide more detailed information. However, it is important to be cautious when employing these methods, as there is a risk of raising suspicion and potentially having your account locked. Considering the potential risks involved, if you decide to pursue further developments or have any other questions, feel free to investigate them more. </p>]]></content>
      
      
      <categories>
          
          <category> Crawl Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Scrape </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apply Sliding Window technique with Two Pointers</title>
      <link href="//post/2022/07/14/Apply-Sliding-Window-technique-with-two-pointers.html"/>
      <url>//post/2022/07/14/Apply-Sliding-Window-technique-with-two-pointers.html</url>
      
        <content type="html"><![CDATA[<p>Motivated by my successful solution to the “Longest Substring Without Repeating Characters” problem on <a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/">Leetcode</a>, I eagerly present the “Sliding Window” technique, a simple yet intriguing method that leverages two pointers to achieve optimal performance.</p><hr><h1 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h1><p>The problem statement is brief and to the point:</p><pre><code class="highlight text">Example 1:Input: s = &quot;abcabcbb&quot;Output: 3Explanation: The answer is &quot;abc&quot;, with the length of 3.Example 2:Input: s = &quot;bbbbb&quot;Output: 1Explanation: The answer is &quot;b&quot;, with the length of 1.Example 3:Input: s = &quot;pwwkew&quot;Output: 3Explanation: The answer is &quot;wke&quot;, with the length of 3.Notice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.</code></pre><p>Since the required output is simply a count, we can employ the following approach:</p><ul><li>HashSet: to determine whether the next character has already appeared</li><li>Right Pointer: shifting point on the right of the string. Right Pointer iterates entire the length of string</li><li>Left Pointer: shifting point on the left of the string. If the Right Pointer met existing char, the Left Pointer would be shifted till that first duplicated position and removed entirely from the HashSet</li></ul><p>For example:</p><pre><code class="highlight text">s = abcabcbbs[left:right] = as[left:right] = abs[left:right] = abcs[left:right] = bca &lt;= Here, we will remove first &#x27;a&#x27; from &#x27;abca&#x27;s[left:right] = cab &lt;= Similarly, &#x27;b&#x27; removed from &#x27;bcab&#x27;s[left:right] = abc &lt;= &#x27;c&#x27; removed from &#x27;cabc&#x27;s[left:right] = cb &lt;= Here we removed &#x27;ab&#x27; from substring &#x27;abcb&#x27;s[left:right] = b &lt;= Here &#x27;cb&#x27; removed from &#x27;cbb&#x27;</code></pre><p>By sliding the window, we can find the length of the longest substring without any duplicate characters, which is 3 for the given input string.</p><p>Python code</p><pre><code class="highlight python"><span class="keyword">class</span> <span class="title class_">Solution</span>:    <span class="keyword">def</span> <span class="title function_">lengthOfLongestSubstring</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:        charSet = <span class="built_in">set</span>()        left = <span class="number">0</span>        result = <span class="number">0</span>        <span class="keyword">for</span> right <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):            <span class="keyword">while</span> s[right] <span class="keyword">in</span> charSet:                charSet.remove(s[left])                left += <span class="number">1</span>                            charSet.add(s[right])            result = <span class="built_in">max</span>(result, right - left + <span class="number">1</span>)        <span class="keyword">return</span> result</code></pre><p>The time complexity of this code is O(n), where n is the length of the input string s.</p><p>The for loop iterates over each character in the string once, and the while loop inside the for loop may iterate over some of those characters again, but it only does so once for each character, so the total number of iterations of the while loop is at most n. Therefore, the time complexity of the algorithm is O(n + n) &#x3D; O(n).</p><p>The space complexity of this code is also O(n), because in the worst case, the set charSet will contain all characters in the input string, and therefore will take up O(n) space.</p><h1 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h1><p>What if the problem requires us to <strong>return the longest substring instead of its length</strong>? In that case, we could create a new dictionary with the result length as the key and an array of corresponding substrings as the value, since there could be multiple substrings with the same maximum length.</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Sliding Window </tag>
            
            <tag> Two Pointers </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KickStart Practice #2: Building Palindromes</title>
      <link href="//post/2022/06/29/KickStart-Practice-2-Building-Palindromes.html"/>
      <url>//post/2022/06/29/KickStart-Practice-2-Building-Palindromes.html</url>
      
        <content type="html"><![CDATA[<p>Palindrome string is one of the problems always presents in Interview or Competitive Programming. Google Kick Start has launched there practice session in four days, included <code>Building Palindromes</code>. </p><hr><h1 id="The-Problem"><a href="#The-Problem" class="headerlink" title="The Problem"></a>The Problem</h1><p>To avoid rambling, the problem is shortened and paraphrased to keep the core problem only. If you wish to do it yourself, please access <a href="https://codingcompetitions.withgoogle.com/kickstart/round/00000000008f4a94/0000000000b54d3b">here</a></p><pre><code class="highlight text">A palindrome is a string that is the same written forwards and backwards. For example, ANNA, RACECAR, AAA and X are all palindromes, while AB, FROG and YOYO are not.Given Q questions, the i-th question is: can we form a inclusive substring to palindrome started at L to R? We may rearrange the string to make it palindrome if necessary, and if it coule be, answer &quot;yes&quot;. In the end, count number of these &quot;yes&quot;(s).Be noticed that L, R is human natural count, which means started at 1, not 0 like computer.LimitsTime limit: 30 seconds.Memory limit: 1 GB.1≤T≤100.1≤Li≤Ri≤N.Test Set 11≤N≤20.1≤Q≤20.Test Set 21≤N≤100000.1≤Q≤100000.</code></pre><p><img src="/images/pasted-11.png"></p><pre><code class="highlight text">ExplanationIn Sample Case #1, N = 7 and Q = 5.- For the first question, substring `AACC` =&gt; Rearrange to palindrome ACCA (or CAAC).- For the second question, substring `A`. This is already a palindrome- For the third question, `BAAC` =&gt; This cannot be rearranged into a palindrome.- For the fourth question, `CA` =&gt; This cannot be rearranged into a palindrome.- For the fifth question, `AACCA` =&gt; Rearrange to form the palindrome ACACA (or CAAAC).- In total, answer &quot;yes&quot; to 3In Sample Case #2, N = 3 and Q = 5. For the first question, `XYZ` to create a palindrome. This is impossible, and since the rest are the same as the first one, the answer is 0.</code></pre><h1 id="Naive-Solution"><a href="#Naive-Solution" class="headerlink" title="Naive Solution"></a>Naive Solution</h1><p>The problem should handle 4 phases:</p><ol><li>Read the string </li><li>Extract the substring for each query Q, from L to R</li><li>Response whether the substring forms palindrome if you have chance to rearrange them. If “yes”, return</li><li>Count these “yes”</li></ol><p>So the core is in step 3, response it as fast as possible. In this Naive Solution, since we just have to answer yes or no without process rearrange, one possible solution is to keep each character in <code>Dictionary</code> represents as frequency of itself. Acknowledged from characteristics of palindrome string is only <code>one/no one odd frequency</code> and the rest should have <code>empty or even frequency</code></p><p>The code below reveals 2 steps: first to accumulate frequency and second to check odd value <code>val % 2 == 1</code>, if odd goes more than 1 time then quickly return <code>False</code></p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">text, L, R</span>):    dct = &#123;&#125;    <span class="keyword">for</span> c <span class="keyword">in</span> text[L-<span class="number">1</span>: R]:        <span class="keyword">if</span> c <span class="keyword">in</span> dct:            dct[c] += <span class="number">1</span>        <span class="keyword">else</span>:            dct[c] = <span class="number">1</span>        is_odd_first_time = <span class="literal">False</span>    <span class="keyword">for</span> val <span class="keyword">in</span> dct.values():        <span class="keyword">if</span> val % <span class="number">2</span> == <span class="number">1</span>:            <span class="keyword">if</span> is_odd_first_time:                <span class="keyword">return</span> <span class="literal">False</span>            is_odd_first_time = <span class="literal">True</span>            <span class="keyword">return</span> <span class="literal">True</span>    <span class="keyword">def</span> <span class="title function_">test</span>():    N, Q = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())    text = <span class="built_in">input</span>()    sayYes = <span class="number">0</span>    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(Q):        L, R = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())        sayYes += query(text, L, R)    <span class="keyword">return</span> sayYes</code></pre><p>The problem of this Naive Solution is we need to create every of Dictionary for each query Q &#x3D;&gt; Time and Space Complexity &#x3D; O(Q*(R-L))</p><p>You definetely cannot pass through Test Set 2 (Time Limit Exceeded)</p><h1 id="Prefix-XOR"><a href="#Prefix-XOR" class="headerlink" title="Prefix XOR"></a>Prefix XOR</h1><p>Exclusive XOR compares the bits of two numbers, in which the result bits are set to 1 if input bits are different and set to 0 if the inputs are the same </p><p><img src="/images/pasted-12.png"></p><p>For the string <code>AABC</code></p><p>Consider decoding character into array whose unique value <code>[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;]</code>.  </p><pre><code class="highlight text">decode(&#x27;A&#x27;) = [1, 0, 0]decode(&#x27;B&#x27;) = [0, 1, 0]decode(&#x27;C&#x27;) = [0, 0, 1]</code></pre><p>Then declare <code>prefix_arr</code> as:</p><pre><code class="highlight text">prefix_arr[0] = decode(&#x27;A&#x27;) = [1, 0, 0]prefix_arr[1] = prefix_arr[0] XOR decode(&#x27;A&#x27;) = [1, 0, 0] ^ [1, 0, 0] = [0, 0, 0]prefix_arr[2] = prefix_arr[1] XOR decode(&#x27;B&#x27;) = [0, 0, 0] ^ [0, 1, 0] = [0, 1, 0]prefix_arr[3] = prefix_arr[2] XOR decode(&#x27;C&#x27;) = [0, 1, 0] ^ [0, 0, 1] = [0, 1, 1]</code></pre><p>Observe from result</p><pre><code class="highlight text">prefix_arr[0] = [1, 0, 0] =&gt; &#x27;A&#x27; =&gt; Palindromeprefix_arr[1] = [0, 0, 0] =&gt; &#x27;AA&#x27; =&gt; Palindromeprefix_arr[2] = [0, 1, 0] =&gt; &#x27;AAB&#x27; =&gt; can arrange to &#x27;ABA&#x27; =&gt; Palindromeprefix_arr[3] = [0, 1, 1] =&gt; &#x27;AABC&#x27; =&gt; Not PalindromeInclusive&#x27;AB&#x27; = prefix[2] - prefix[0] = [0, 1, 0] - [1, 0, 0] = [-1, 1, 0] =&gt; absolute to [1, 1, 0] =&gt; Not PalindromeSecond &#x27;A&#x27; = prefix[2] - prefox[1] = [0, 1, 0] - [0, 0, 0] = [0, 1, 0] =&gt; Palindrome&#x27;ABC&#x27; = prefix[3] - prefix[1] = [0, 1, 1] - [0, 0, 0] = [0, 1, 1] =&gt; Not Palindrome</code></pre><p>As you can see, it is true that sum of <code>1</code> and <code>absoluate(-1)</code> is less than or equal 1 brings Palindrome and greater than 1 brings Not Palindrome. There explains that the <code>even frequency</code> return 0 and only keep it final <code>odd frequency</code>, thank to XOR operator</p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">query_v2</span>(<span class="params">arr, L, R</span>):    odd=<span class="built_in">sum</span>((x-y) % <span class="number">2</span> != <span class="number">0</span> <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(arr[L-<span class="number">1</span>], arr[R]))    <span class="keyword">return</span> odd &lt;= <span class="number">1</span><span class="keyword">def</span> <span class="title function_">test_v2</span>():    N, Q = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())    text = <span class="built_in">input</span>()    arr = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>)]]    <span class="keyword">for</span> el <span class="keyword">in</span> text:        new = arr[-<span class="number">1</span>][::]        new[<span class="built_in">ord</span>(el)-<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)] ^= <span class="number">1</span>        arr.append(new)    sayYes = <span class="number">0</span>    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(Q):        L, R = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())        sayYes += query_v2(arr, L, R)    <span class="keyword">return</span> sayYes</code></pre><p>The above code shows I have encoded to 26 places, stored in <code>arr</code> stands for prefix array. After that generated ASCII code via <code>ord()</code> function and put them in exact position. More, instead of XOR entire 2 arrays between last prefix array and decoded char, I can easily address to the prefix array in representative position, then doing XOR with 1 in this line <code>new[ord(el)-ord(&#39;A&#39;)] ^= 1</code>.</p><p>It can submit to pass Test Set 2 now.</p><p>Some small optimizations here<br><code>(x-y) % 2 != 0</code> is based on prefix sum sense, as in this case we could change to <code>x ^ y</code> without changing meaning and result basically. So the code would be as following</p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">query_v2</span>(<span class="params">arr, L, R</span>):    odd=<span class="built_in">sum</span>((x^y) <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(arr[L-<span class="number">1</span>], arr[R]))    <span class="keyword">return</span> odd &lt;= <span class="number">1</span></code></pre><h1 id="Further-optimization"><a href="#Further-optimization" class="headerlink" title="Further optimization"></a>Further optimization</h1><p>In this version, I am going to optimize the technique used on previous section, which is array, instead of places the array of 26 places (A to Z), I will place in an array but in bit, known as integer. Ex.<br><code>[1, 0, 0]</code> would be bits <code>100</code> equivalent to integer of 6</p><p>To adjust XOR on specified bit, we will shift 1 into there desired index as usual.</p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">query_v3</span>(<span class="params">arr, L, R</span>):    odd = <span class="built_in">bin</span>(arr[L-<span class="number">1</span>] ^ arr[R]).count(<span class="string">&#x27;1&#x27;</span>)    <span class="keyword">return</span> odd &lt;= <span class="number">1</span><span class="keyword">def</span> <span class="title function_">test_v3</span>():    N, Q = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())    text = <span class="built_in">input</span>()    arr = [<span class="number">0</span>]    <span class="keyword">for</span> el <span class="keyword">in</span> text:        new = arr[-<span class="number">1</span>]        new ^= <span class="number">1</span> &lt;&lt; <span class="built_in">ord</span>(el)-<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)        arr.append(new)    sayYes = <span class="number">0</span>    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(Q):        L, R = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())        sayYes += query_v3(arr, L, R)    <span class="keyword">return</span> sayYes</code></pre><p>Some minor optimizations you can consider<br>If you are using Python 3.10, the count code would be <a href="https://github.com/python/cpython/pull/771#issuecomment-288570744">6 times faster</a> </p><pre><code class="highlight python"><span class="built_in">int</span>.bit_count()</code></pre><p>Or you could take while loop until it exceeds 1 &#x3D;&gt; return False</p><h1 id="Further-expanding-problem"><a href="#Further-expanding-problem" class="headerlink" title="Further expanding problem"></a>Further expanding problem</h1><p>During searching for optimized solution, I have found the similar challenge on <a href="https://leetcode.com/problems/can-make-palindrome-from-substring/">leetcode</a>.</p><p>The problem is expanded to opt for <code>k</code> times replacement on substring, say <code>ABC</code>, you will have at least 1 time to replace <code>C</code> to <code>A</code>, form <code>ABA</code>. Realistically, <code>ABC</code> stands for <code>[1, 1, 1]</code> and sum of 1s is 3. We would like to make valid Palindrome so there becomes <code>3 div 2 = 1</code> &#x3D;&gt; 1 is the minimum of replacement.</p><ul><li>Another example, say <code>ABACDC</code>&#x3D;&gt; <code>[0, 1, 0, 1]</code> &#x3D;&gt; <code>2 div 2 = 1</code>. Exactly for rearrangement like <code>CCABDACC</code> &#x3D;&gt; <code>D</code> to <code>B</code> or vice versa &#x3D;&gt; <code>CCABBACC</code></li><li><code>AA</code> &#x3D;&gt; <code>[0]</code> &#x3D;&gt; <code>0 div 2 = 0</code></li><li><code>AAA</code> &#x3D;&gt; <code>[1]</code> &#x3D;&gt; <code>1 div 2 = 0</code></li></ul><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">query_v4</span>(<span class="params">arr, L, R, k</span>):    odd = <span class="built_in">bin</span>(arr[L-<span class="number">1</span>] ^ arr[R]).count(<span class="string">&#x27;1&#x27;</span>)    <span class="keyword">return</span> odd // <span class="number">2</span> &lt;= k</code></pre><p>It is done now, time to eat</p><p><img src="/images/tonton-2.gif"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
          <category> Python </category>
          
          <category> Google </category>
          
          <category> Kick Start </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Palindromes </tag>
            
            <tag> Kick Start </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Crawl data from App Store Connect</title>
      <link href="//post/2022/06/27/Crawl-data-from-App-Store-Connect.html"/>
      <url>//post/2022/06/27/Crawl-data-from-App-Store-Connect.html</url>
      
        <content type="html"><![CDATA[<p>In this article, I will show you the way to get Units, the term indicates how many downloads on your own application published on App Store, following by days, months, years, using Python script</p><hr><p>Make sure you have your own privileges to access App Store Connect and generate below information</p><h1 id="Generate-API-Key-download-Private-Key"><a href="#Generate-API-Key-download-Private-Key" class="headerlink" title="Generate API Key, download Private Key,"></a>Generate API Key, download Private Key,</h1><pre><code class="highlight text">- Select Users and Access, and then select the API Keys tab.- Click Generate API Key or the Add (+) button.- Enter a name for the key. The name is for your reference only and is not part of the key itself.- Under Access, select the role for the key.- Click Generate.- Click &quot;Download API Key&quot; link next to the new API key.More instruction: https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api</code></pre><p>The API Key looks like this format</p><pre><code class="highlight text">2X9R4HXF34</code></pre><p>The Private Key looks like this format</p><pre><code class="highlight text">---- Begin Private Key ----Key....---- End Private Key ----</code></pre><p>Also from Connector page, please prepares more 2 Ids to process next step</p><pre><code class="highlight text">IssuerId. Ex: 57246542-96fe-1a63-e053-0824d011072aVendorId. Ex. 1234567More Instruction: https://help.apple.com/app-store-connect/#/dev3a16f3fe0</code></pre><p>So, in total, make sure you already kept:</p><pre><code class="highlight text">IssuerIdVendorIdKeyId = API KeyPrivateKey</code></pre><h1 id="Sign-JWT-Token"><a href="#Sign-JWT-Token" class="headerlink" title="Sign JWT Token"></a>Sign JWT Token</h1><p>Next, we will use them to create and sign JWT Token, I have created a python function to archieve downloading, if you are using another language or simply RESTful, please follow official instruction here<br><a href="https://developer.apple.com/documentation/appstoreconnectapi/generating_tokens_for_api_requests">https://developer.apple.com/documentation/appstoreconnectapi/generating_tokens_for_api_requests</a></p><pre><code class="highlight python"><span class="comment"># pip install pyjwt</span><span class="comment"># pip install pyjwt[crypto]</span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timezone<span class="keyword">import</span> jwt<span class="keyword">def</span> <span class="title function_">sign_appstore_token</span>(<span class="params">issuer_id, key_id, generated_private_key</span>):    bin_private_key = generated_private_key.encode()    current_unix = <span class="built_in">int</span>(datetime.now(tz=timezone.utc).timestamp())    token = jwt.encode(&#123;            <span class="string">&quot;iss&quot;</span>: issuer_id,            <span class="string">&quot;iat&quot;</span>: current_unix,            <span class="string">&quot;exp&quot;</span>: current_unix + <span class="number">1000</span>,             <span class="string">&quot;aud&quot;</span>: <span class="string">&quot;appstoreconnect-v1&quot;</span>,    &#125;, key= bin_private_key, algorithm= <span class="string">&#x27;ES256&#x27;</span>, headers= &#123;        <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,        <span class="string">&quot;kid&quot;</span>: key_id,        <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span>    &#125;)    <span class="keyword">return</span> token</code></pre><h1 id="Download-report"><a href="#Download-report" class="headerlink" title="Download report"></a>Download report</h1><p>This link provides the method to download report <a href="https://developer.apple.com/documentation/appstoreconnectapi/download_sales_and_trends_reports">https://developer.apple.com/documentation/appstoreconnectapi/download_sales_and_trends_reports</a></p><p>Be noticed that to get the Units, reportType should be <code>SALES</code>. Also noticed that reportDate and frequency have to consistency each other, if you specify: </p><ul><li><code>filter[frequency] = YEARLY</code>, then <code>filter[reportDate] = 2021</code></li><li><code>filter[frequency] = MONTHLY</code>, then <code>filter[reportDate] = 2021-06</code>.<br>The frequency configuration groups the report to a file, depends on your needs.</li></ul><p>Sample query:</p><pre><code class="highlight text">https://api.appstoreconnect.apple.com/v1/salesReports?filter[frequency]=YEARLY&amp;filter[reportDate]=2021&amp;filter[reportSubType]=SUMMARY&amp;filter[reportType]=SALES&amp;filter[vendorNumber]=YOUR_VENDOR_IDHeaders: Authorization: Bearer YOUR_ABOVE_TOKEN</code></pre><p>You will get binary response if it is success, represented for .gz file as well. Extract gz to get .txt schema deliminated by <code>\t</code></p><p>Python script here returns file content as text, you can do your next step, pandas table, or to model, it is up to you</p><pre><code class="highlight python"><span class="keyword">import</span> requests<span class="keyword">import</span> gzip<span class="keyword">def</span> <span class="title function_">download_appstore_objects</span>(<span class="params">token, vendor_id, frequency, reportDate</span>):    link = <span class="string">f&#x27;https://api.appstoreconnect.apple.com/v1/salesReports?filter[frequency]=<span class="subst">&#123;frequency&#125;</span>&amp;filter[reportDate]=<span class="subst">&#123;reportDate&#125;</span>&amp;filter[reportSubType]=SUMMARY&amp;filter[reportType]=SALES&amp;filter[vendorNumber]=<span class="subst">&#123;vendor_id&#125;</span>&#x27;</span>    response = requests.get(link, headers= &#123;<span class="string">&#x27;Authorization&#x27;</span>: <span class="string">f&#x27;Bearer <span class="subst">&#123;token&#125;</span>&#x27;</span> &#125;)    file_content = gzip.decompress(response.content).decode(<span class="string">&#x27;utf-8&#x27;</span>)    <span class="keyword">return</span> file_content</code></pre><p>Columns included:</p><pre><code class="highlight text">Provider    Provider Country    SKU Developer   Title   Version Product Type Identifier Units   Developer Proceeds  Begin Date  End Date    Customer Currency   Country Code    Currency of Proceeds    Apple Identifier    Customer Price  Promo Code  Parent Identifier   Subscription    Period  Category    CMB Device  Supported PlatformsProceeds Reason Preserved Pricing   Client  Order Type</code></pre><p>About field types, please refer <a href="https://help.apple.com/app-store-connect/#/dev15f9508ca">https://help.apple.com/app-store-connect/#/dev15f9508ca</a></p>]]></content>
      
      
      <categories>
          
          <category> Crawl Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Scrape </tag>
            
            <tag> App Store Connect </tag>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shuffle strategic for limited resources</title>
      <link href="//post/2021/12/27/Shuffle-strategic-for-limited-resources.html"/>
      <url>//post/2021/12/27/Shuffle-strategic-for-limited-resources.html</url>
      
        <content type="html"><![CDATA[<p>On the early stage of Machine Learning, Data Mining progress, one of the problems we have to deal with processing large-size file, including corpus shuffle, usually its size would be larger than our limited resources like memory or capacity. Let’s say, the file is 30GB, whereas the provided memory is 8GB or 16GB, we surely cannot load entire them to memory in term of resource shuffling distribution notion. Therefore, the strategic tends to serve that case called Lazy Shuffling Algorithm allowing us to generally trade off time and capacity for memory allocation.</p><hr><h1 id="Shuffle-Algorithm"><a href="#Shuffle-Algorithm" class="headerlink" title="Shuffle Algorithm"></a>Shuffle Algorithm</h1><p>In Computer Science, mixing dataset randomly required unpredictable randomness method, that pure randomness leads the data to be more natural sense. Due to the fact that computer only creates a <em>true random number</em> indeed an external event from real world, by other words, it measures some type of physical phenomenon that takes place outside of the computer like keyboard typing, mouse moving, temporature, treated as environment seeds to make sure generated numbers cannot be reproduced by some kind of reverse engineering.</p><p><img src="/images/pasted-10.png" alt="Random number"></p><p>Actually, the true data shuffling with high and perfect expectation could be somewhere fulfill by <em>pseudorandom generator</em>, these random numbers completely created by algorithm and seed value, instead of external event factors are also reluctantly acceptable, since sequence results are closer to truly random in several proven experiments. From there, Fisher Yates shuffle algorithm, leverages the perspective of pseudorandom generator approach, says </p><pre><code class="highlight text">-- To shuffle an array a of n elements (indices 0..n-1):for i from n−1 downto 1 do     j ← random integer such that 0 ≤ j ≤ i     exchange a[j] and a[i]</code></pre><p>Wiki: <a href="https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle">https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle</a></p><p>The algorithm inspired by pseudorandom generator approach to randomly permutate in-memory swapping throughout entire dataset, thus, the in-place update does not incurred new dataset, of course no more spaces required before and after executing. But when if memory issue is a big deal, which would become puzzled to apply.</p><h1 id="Lazy-Shuffle-Algorithm"><a href="#Lazy-Shuffle-Algorithm" class="headerlink" title="Lazy Shuffle Algorithm"></a>Lazy Shuffle Algorithm</h1><p>Considering space is adjustable and time could be as fast as possible excepts memory is finite, we are not able to load whole large data based on FY Shuffle, then we have to improve it as Lazy Shuffle Algorithm, working around by shuffling index first, seeking and assigning new shuffled data later. Below algorithm serves the line by line format, if the file is a binary, we will have same approach but more complicated on binary serial structure.</p><ul><li>Load line by line and save the cursor offset, aka line map on each line into the offset_list. For example line 1 ends at 30, line 2 ends at 60 and so on, the offset_list should be <code>offset_list = [0, 30, 60, .... 40]</code></li><li>Create the index_list from range 0 to length of the offset_list, then the line 1 marked as index 0, line 2 marked as index 1,… The index_list must be <code>index_list = [0, 1, 2, 3, 4...., n]</code></li><li>Conduct shuffling index_list, in view of the fact that index_list contains only those indices, so it will not too much large resource basically. The sequence results would be also index_list object (because of in-place swapping) likely as <code>index_list = [4504, 134, 27676, 364756, 4...., 43]</code></li><li>Looping through shuffled index_list, we will leverage the offset_list to quickly access to the line, for example, <code>index_list[0] = 4504</code> and <code>offset_list[4504] = 490478</code>, seek file cursor <code>f</code> by <code>f.seek(490478)</code> and <code>new_line = f.readline()</code>, then appended writes <code>new_line</code> sequetially in a new file instead of in-place swapping.</li></ul><h1 id="Python-implementation"><a href="#Python-implementation" class="headerlink" title="Python implementation"></a>Python implementation</h1><p>I have prepared the 5.6GB file aggregated by binhvq, uncompressed ~27.5GB:<br><a href="https://github.com/binhvq/news-corpus#full-txt-v2">https://github.com/binhvq/news-corpus#full-txt-v2</a></p><p>To easier demo, I will use colab for the whole algorithm, firsly, download the file and wait for completion.</p><pre><code class="highlight python">!pip install --upgrade --no-cache-<span class="built_in">dir</span> gdown!gdown --no-cookies --<span class="built_in">id</span> 1GFbe-qs6HmCYs0JwJgivOy2Bvb06M8OI<span class="comment"># !gdown --id 1GFbe-qs6HmCYs0JwJgivOy2Bvb06M8OI =&gt; Not work</span>!7z e corpus-full-<span class="number">20181217.7</span>z</code></pre><p>It will take ~10 min to finish process, so let move to next section</p><p>To seek the file partially, the example here</p><pre><code class="highlight python"><span class="keyword">class</span> <span class="title class_">LineSeekableFile</span>:    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, seekable</span>):        <span class="variable language_">self</span>.fin = seekable        <span class="variable language_">self</span>.line_map = <span class="built_in">list</span>() <span class="comment"># Map from line index -&gt; file position.</span>        <span class="variable language_">self</span>.line_map.append(<span class="number">0</span>)        <span class="keyword">while</span> seekable.readline():            <span class="variable language_">self</span>.line_map.append(seekable.tell())        <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, index</span>):        <span class="comment"># <span class="doctag">NOTE:</span> This assumes that you&#x27;re not reading the file sequentially.  For that, just use &#x27;for line in file&#x27;.</span>        <span class="variable language_">self</span>.fin.seek(<span class="variable language_">self</span>.line_map[index])        <span class="keyword">return</span> <span class="variable language_">self</span>.fin.readline()</code></pre><p>Source: <a href="https://gist.github.com/JosephCatrambone/25476e9a37e932e50c527fc41e164e07">https://gist.github.com/JosephCatrambone/25476e9a37e932e50c527fc41e164e07</a></p><p>I modify a bit the class <code>LineSeekableFile</code>, on the first time initialization, the line will be loop entire the file, but only keep line positions to <code>line_map</code> aka <code>offset_list</code>, I set 10 lines read to easier testing</p><pre><code class="highlight python"><span class="keyword">class</span> <span class="title class_">LineSeekableFile</span>:\t<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, f</span>):        <span class="variable language_">self</span>.fin = f        <span class="comment"># create the line map starting by 0</span>        <span class="variable language_">self</span>.line_map = [<span class="number">0</span>]        <span class="variable language_">self</span>.line_count = <span class="number">0</span>        file_pos = <span class="number">0</span>        <span class="keyword">for</span> line <span class="keyword">in</span> f:            file_pos += <span class="built_in">len</span>(line)            <span class="variable language_">self</span>.line_map.append(file_pos)            <span class="variable language_">self</span>.line_count += <span class="number">1</span>            <span class="comment"># Break for testing purpose</span>            <span class="keyword">if</span> <span class="variable language_">self</span>.line_count == <span class="number">10</span>:                <span class="keyword">break</span>    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, index</span>):        <span class="comment"># <span class="doctag">NOTE:</span> This assumes that you&#x27;re not reading the file sequentially.  </span>        <span class="comment"># For that, just use &#x27;for line in file&#x27;.</span>        <span class="variable language_">self</span>.fin.seek(<span class="variable language_">self</span>.line_map[index])        <span class="keyword">return</span> <span class="variable language_">self</span>.fin.readline()</code></pre><p>The <code>index_list</code> created by <code>line_count</code>, so when it reads 10 lines, it will get 10 lines and shuffle in that scope</p><pre><code class="highlight python"><span class="keyword">import</span> random<span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;corpus-full-0.2.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f, <span class="built_in">open</span>(<span class="string">&#x27;new-corpus.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> fw:    seeker = LineSeekableFile(f)    index_list = <span class="built_in">list</span>(<span class="built_in">range</span>(seeker.line_count))    <span class="comment"># Fisher Shuffle</span>    random.shuffle(index_list)    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(seeker.line_count):        <span class="built_in">print</span>(<span class="string">f&#x27;Row <span class="subst">&#123;i&#125;</span>, swap with <span class="subst">&#123;index_list[i]&#125;</span>&#x27;</span>)        <span class="built_in">print</span>(<span class="string">f&#x27;Origin <span class="subst">&#123;i&#125;</span>, <span class="subst">&#123;seeker[i]&#125;</span>&#x27;</span>)        <span class="built_in">print</span>(<span class="string">f&#x27;Shuffled <span class="subst">&#123;index_list[i]&#125;</span>, <span class="subst">&#123;seeker[index_list[i]]&#125;</span>&#x27;</span>)        <span class="built_in">print</span>(<span class="string">&#x27;-----&#x27;</span>)        fw.write(seeker[index_list[i]])</code></pre><p>After finish testing, you can remove the print message and the breaking line to see performance. </p><p>Full code here: </p><pre><code class="highlight python"><span class="comment"># For colab only</span>!pip install --upgrade --no-cache-<span class="built_in">dir</span> gdown!gdown --no-cookies --<span class="built_in">id</span> 1GFbe-qs6HmCYs0JwJgivOy2Bvb06M8OI!7z e corpus-full-<span class="number">20181217.7</span>z<span class="keyword">import</span> random<span class="keyword">class</span> <span class="title class_">LineSeekableFile</span>:    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, f</span>):        <span class="variable language_">self</span>.fin = f        <span class="comment"># create the line map starting by 0</span>        <span class="variable language_">self</span>.line_map = [<span class="number">0</span>]        <span class="variable language_">self</span>.line_count = <span class="number">0</span>        file_pos = <span class="number">0</span>        <span class="keyword">for</span> line <span class="keyword">in</span> f:            file_pos += <span class="built_in">len</span>(line)            <span class="variable language_">self</span>.line_map.append(file_pos)            <span class="variable language_">self</span>.line_count += <span class="number">1</span>            <span class="comment"># Break for testing purpose</span>            <span class="keyword">if</span> <span class="variable language_">self</span>.line_count == <span class="number">10</span>:                <span class="keyword">break</span>    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, index</span>):        <span class="comment"># <span class="doctag">NOTE:</span> This assumes that you&#x27;re not reading the file sequentially.  </span>        <span class="comment"># For that, just use &#x27;for line in file&#x27;.</span>        <span class="variable language_">self</span>.fin.seek(<span class="variable language_">self</span>.line_map[index])        <span class="keyword">return</span> <span class="variable language_">self</span>.fin.readline()<span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;corpus-full-0.2.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f, <span class="built_in">open</span>(<span class="string">&#x27;new-corpus.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> fw:    seeker = LineSeekableFile(f)    index_list = <span class="built_in">list</span>(<span class="built_in">range</span>(seeker.line_count))    random.shuffle(index_list)    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(seeker.line_count):        <span class="built_in">print</span>(<span class="string">f&#x27;Row <span class="subst">&#123;i&#125;</span>, swap with <span class="subst">&#123;index_list[i]&#125;</span>&#x27;</span>)        <span class="built_in">print</span>(<span class="string">f&#x27;Origin <span class="subst">&#123;i&#125;</span>, <span class="subst">&#123;seeker[i]&#125;</span>&#x27;</span>)        <span class="built_in">print</span>(<span class="string">f&#x27;Shuffled <span class="subst">&#123;index_list[i]&#125;</span>, <span class="subst">&#123;seeker[index_list[i]]&#125;</span>&#x27;</span>)        <span class="built_in">print</span>(<span class="string">&#x27;-----&#x27;</span>)        fw.write(seeker[index_list[i]])</code></pre><p>For code running in colab, please reference here: <a href="https://colab.research.google.com/drive/1rRO5u_WpXYkRdq3lugW-ed2v0UH525G5?usp=sharing">https://colab.research.google.com/drive/1rRO5u_WpXYkRdq3lugW-ed2v0UH525G5?usp=sharing</a></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lazy Shuffle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kỷ nguyên Digital Transformation - không chỉ là công nghệ</title>
      <link href="//post/2021/09/21/Ky-nguyen-Digital-Transformation.html"/>
      <url>//post/2021/09/21/Ky-nguyen-Digital-Transformation.html</url>
      
        <content type="html"><![CDATA[<p>Trong những năm gần đây, khi nhắc đến cuộc Cách mạng Công nghiệp mới, một trong những khái niệm được nhắc đến nhiều nhất chính là Digital Transformation – hay Chuyển Đổi Số (CDS). Tuy nhiên, không phải ai cũng thực sự hiểu rõ CDS là gì, nó khác gì so với Số hóa (Digitization), Kỹ thuật số hóa (Digitalization), hay đơn thuần là việc đưa phần mềm vào vận hành.</p><hr><p>Vậy CDS có thực sự cần thiết cho mọi tổ chức, doanh nghiệp? Nó có đơn giản là chuyện “áp dụng công nghệ”, hay là một hành trình phức tạp hơn nhiều?</p><h1 id="Hieu-dung-ve-cac-khai-niem"><a href="#Hieu-dung-ve-cac-khai-niem" class="headerlink" title="Hiểu đúng về các khái niệm"></a>Hiểu đúng về các khái niệm</h1><p>Trước khi bàn sâu về CDS, cần phân biệt rõ ràng giữa các khái niệm dễ gây nhầm lẫn: Số hóa (Digitization), Kỹ thuật số hóa (Digitalization) và Ứng dụng số hóa (Digitalized Applications).</p><p>Từ thời xa xưa con người đã có nhu cầu sử dụng giấy để ghi chép lại thông tin và họ luôn muốn lưu giữ hoặc truyền bá thông điệp một cách hiệu quả. Chẳng hạn như thời cổ và trung đại, nếu muốn truyền thông tin đến công chúng một cách rộng rãi và nhanh chóng, họ sẽ lựa chọn khắc gỗ bản gốc và cho in hàng loạt. Thời cận đại, máy gõ chữ giúp người gõ văn bản nhanh chóng, nhân loại đã có bước tiến, nhưng chưa đủ. Cho đến cuối thế kỷ XX và đầu thế kỷ XXI, mọi thứ mới có sự khác biệt lớn - số hoá</p><p><img src="/images/pasted-7.png" alt="Máy gõ chữ"></p><p>Số hóa là bước đầu tiên trong hành trình chuyển đổi công nghệ. Nó đơn giản là việc chuyển dữ liệu từ dạng vật lý (giấy, âm thanh, hình ảnh…) sang định dạng số. Ví dụ:</p><ul><li>Gõ lại văn bản từ bản in thành file Word</li><li>Scan tài liệu giấy thành file PDF</li><li>Ghi âm cuộc họp để lưu trữ thay vì viết tay biên bản</li></ul><p>Những tài liệu này sẽ được gửi email, được phổ biến rộng rãi từ nơi này sang nơi khác nhanh hơn, được lưu trữ ở một nơi nào đó an toàn hơn. Các công việc, kinh doanh cũng sẽ được thao tác thực hiện trên máy tính nhiều hơn.</p><p>Về doanh nghiệp, sẽ thật thiếu sót nếu không kể đến các Ứng Dụng Số Hóa (Digitalized Application), đó có thể là mức độ thấp như Word, Excel, Powerpoint cho đến các mức độ cao như ERP, CRM, SAP để tối ưu hóa luồng công việc, giảm thiếu chi phí thực hiện từ hai phía nội bộ doanh nghiệp và lĩnh vực doanh nghiệp đang kinh doanh.</p><p>Khi có ứng dụng rồi, thì người quản lý dữ liệu đó phải học cách khai thác, một doanh nghiệp nhỏ có thể sử dụng Excel để làm thống kê, đưa ra phương hướng quyết định, nhưng khi mức độ nhiều hơn, số lượng dữ liệu quá lớn, thì bắt buộc phải có Kỹ Thuật Số Hóa để phù hợp với từng nhánh chuyên sâu hơn. Doanh nghiệp có thể đặt hàng công ty dữ liệu để đưa ra các Insights, ví dụ như các biểu đồ, thống kê, xu hướng, độ tin cậy của một mô hình,… Để từ đó lập kế hoạch, chiến dịch cho tương lai</p><p>Nhìn chung, sự áp dụng Kỹ Thuật Số đã đi sâu vào đời sống doanh nghiệp, từ mức độ thấp cho đến mức độ cao. Nhưng khi bước vào giai đoạn mới, gọi là Chuyển Đổi Số, nó lại liên quan đến văn hóa (Culture) nhiều hơn là kỹ thuật (Technology)</p><h1 id="Chuyen-doi-so"><a href="#Chuyen-doi-so" class="headerlink" title="Chuyển đổi số"></a>Chuyển đổi số</h1><p>CDS là quá trình thay đổi toàn diện từ mô hình kinh doanh, quy trình vận hành đến tư duy tổ chức – thông qua sự kết hợp giữa công nghệ số và văn hóa đổi mới.</p><p>Điều quan trọng nhất: CDS không chỉ là câu chuyện công nghệ – nó là câu chuyện con người, tư duy và văn hóa doanh nghiệp.</p><p>Một doanh nghiệp thực hiện CDS khi:</p><ul><li>Thay đổi cách tạo ra giá trị cho khách hàng</li><li>Tái cấu trúc quy trình nội bộ để tối ưu vận hành</li><li>Áp dụng công nghệ để đưa ra quyết định dựa trên dữ liệu (data-driven)</li><li>Phát triển mô hình kinh doanh mới</li></ul><p>Các doanh nghiệp lâu đời sẽ rất khó ứng dụng chuyển đổi số một cách nhanh chóng so với những doanh nghiệp khởi nghiệp, do họ còn tồn tại các quy trình, các văn hóa, tất nhiên điều đó không sai nếu xét về mặt ổn định.</p><p><img src="/images/pasted-8.png" alt="Netflix"></p><p>Ví dụ về công ty Netflix, năm 1997, công ty đang định hình ở mảng cho thuê DVD qua thư bưu điện, 10 năm sau Netflix cho phép phát hành video online, cho đến hiện nay đã rất thành công trong việc bán subscription để người dùng được thưởng thức không chỉ series truyền hình mà còn cả phim rạp. Từ đó, hình thành văn hóa xem phim online thay cho băng đĩa hay truyền hình cáp truyền thống. Nói cách khác, Netflix đã chủ động thay đổi và từng bước đưa giải pháp để người xem tiếp cận được tiện ích giải trí.</p><p><img src="/images/pasted-9.png" alt="Dropbox"></p><p>Công ty Dropbox khởi nghiệp với mục tiêu thay đổi cách gửi file qua email hay USB vì sẽ có rủi ro virus và mất mát. Qua đó định hình được văn hóa sử dụng Cloud Computing để lưu trữ (SaaS)</p><p>Trong đại dịch COVID-19, thế giới đã chứng kiến một “cuộc CDS bất đắc dĩ”:</p><ul><li>Trường học chuyển sang dạy học online</li><li>Siêu thị, chợ truyền thống phải bán hàng qua Zalo, Facebook</li><li>Doanh nghiệp triển khai làm việc từ xa, ký số, quy trình tự động</li></ul><p>Có thể thấy, xã hội sẽ phải đối mặt với việc CDS ở rất nhiều lĩnh vực, không nhất thiết tổ chức doanh nghiệp buộc phải có AI, IoT, Big Data,… những suy nghĩ đấy không hẳn đúng hoàn toàn. Hai công ty ví dụ phía trên đều không có áp dụng những kỹ thuật tiên tiến ngay thời buổi ban đầu, nhưng nhờ CDS, họ có thể áp dụng rất nhiều kỹ thuật đó để ngày càng phát triển hơn, nói cách khác, CDS là tiền đề để áp dụng khoa học công nghệ và kỹ thuật. CDS cũng không nhất thiết phải bắt đầu từ những thứ lớn lao, nó có thể bắt đầu đơn giản bằng việc trả lời: Khách hàng của bạn đang gặp vấn đề gì – và công nghệ có thể giải quyết nó như thế nào?</p><p>CDS không phải là “xu hướng”, mà là điều kiện để tồn tại. Trong bối cảnh kinh tế biến động, mô hình làm việc lai, sự thay đổi hành vi người tiêu dùng, CDS giúp doanh nghiệp:</p><ul><li>Linh hoạt hơn với biến động thị trường</li><li>Tối ưu chi phí vận hành</li><li>Ra quyết định nhanh chóng, dựa trên dữ liệu</li><li>Tạo ra trải nghiệm khách hàng vượt trội</li></ul><h1 id="Dieu-kien-de-chuyen-doi-so"><a href="#Dieu-kien-de-chuyen-doi-so" class="headerlink" title="Điều kiện để chuyển đổi số"></a>Điều kiện để chuyển đổi số</h1><h2 id="Tu-duy-lanh-dao-Chap-nhan-sai-lam-va-lien-tuc-cai-tien"><a href="#Tu-duy-lanh-dao-Chap-nhan-sai-lam-va-lien-tuc-cai-tien" class="headerlink" title="Tư duy lãnh đạo: Chấp nhận sai lầm và liên tục cải tiến"></a>Tư duy lãnh đạo: Chấp nhận sai lầm và liên tục cải tiến</h2><p>CDS là một hành trình dài hạn, có thể gặp nhiều thất bại nhỏ trước khi đạt được thành công lớn. Lãnh đạo cần chấp nhận nhiều sự thay đổi cốt lõi:</p><ul><li>Ban lãnh đạo có tư duy mở, hiểu rằng CDS không phải là “một dự án IT”</li><li>Có chiến lược và lộ trình cụ thể, không làm kiểu phong trào</li><li>Dám thử nghiệm và học hỏi từ sai lầm</li></ul><p>Luôn khoan dung với lỗi lầm và rủi ro có thể xảy ra đối với CDS, các lãnh đạo doanh nghiệp phải nhận thức được tầm quan trọng của CDS, để từ đó đưa ra lộ trình, ngân sách và hướng giải quyết khi mắc lỗi lầm.</p><h2 id="Ky-nang-cong-nghe-va-nhan-thuc-bao-mat"><a href="#Ky-nang-cong-nghe-va-nhan-thuc-bao-mat" class="headerlink" title="Kỹ năng công nghệ và nhận thức bảo mật"></a>Kỹ năng công nghệ và nhận thức bảo mật</h2><p>Các phòng ban phải có kỹ năng công nghệ thông tin nhất định và cũng phải có nhận thức về bảo mật thông tin. Ngoài ra phòng ban cũng phải có ý chí để tiếp thu được công nghệ, qua đó đóng góp được hướng xử lý tốt hơn. Quan trọng hơn:</p><ul><li>Có khả năng phối hợp với bộ phận IT hoặc nhà cung cấp giải pháp</li><li>Hiểu về rủi ro bảo mật và tuân thủ chính sách an toàn dữ liệu</li></ul><p>Ví dụ thực tế: Nếu phòng HR không chịu sử dụng phần mềm quản lý KPI vì quen làm trên Excel, thì dù bộ phận kỹ thuật có giỏi đến đâu, CDS cũng không thể thành công. CDS đòi hỏi tất cả các bên cùng thay đổi, không thể chỉ đến từ một phía.</p><h2 id="Lay-khach-hang-lam-trung-tam"><a href="#Lay-khach-hang-lam-trung-tam" class="headerlink" title="Lấy khách hàng làm trung tâm"></a>Lấy khách hàng làm trung tâm</h2><p>Mọi hành động CDS đều phải quay về câu hỏi: Khách hàng có cảm thấy tiện lợi, hài lòng hơn không?<br>Netflix, Dropbox, Amazon,… đều bắt đầu từ việc giải quyết nỗi đau cụ thể của khách hàng, sau đó mở rộng ra bằng công nghệ.</p><h2 id="CDS-la-hanh-trinh-lien-tuc-–-Agile-Transformation"><a href="#CDS-la-hanh-trinh-lien-tuc-–-Agile-Transformation" class="headerlink" title="CDS là hành trình liên tục – Agile Transformation"></a>CDS là hành trình liên tục – Agile Transformation</h2><p>Không thể có chuyện “CDS xong rồi!”. CDS phải là liên tục – thích nghi – cải tiến, giống như nguyên lý của Agile.</p><ul><li>Marketing phải học cách dùng dữ liệu (SQL, BI) thay vì dựa vào cảm tính</li><li>Sales phải biết kết nối CRM để theo sát hành trình khách hàng</li><li>HR phải số hóa quy trình tuyển dụng, đánh giá và đãi ngộ</li></ul><p>CDS chỉ thành công khi mọi phòng ban cùng hành động, chứ không phải chỉ bộ phận CNTT.</p><h1 id="Ket-luan"><a href="#Ket-luan" class="headerlink" title="Kết luận"></a>Kết luận</h1><p>Chuyển Đổi Số không phải là đích đến, mà là hành trình liên tục.<br>Doanh nghiệp nào càng bắt đầu sớm – càng có lợi thế cạnh tranh trong tương lai.</p><p>Những điều cần ghi nhớ:</p><ul><li>CDS là sự thay đổi về tư duy và văn hóa – không chỉ là phần mềm hay phần cứng</li><li>Không cần AI, Big Data để CDS – nhưng CDS là nền tảng để áp dụng các công nghệ đó sau này</li><li>Khách hàng là trung tâm – công nghệ chỉ là phương tiện</li><li>Lãnh đạo phải dẫn dắt bằng tầm nhìn, nhân viên phải đồng hành bằng hành động</li><li>CDS là sự học hỏi liên tục – thích nghi, thử nghiệm và không ngừng cải tiến</li><li>Chuyển đổi số không còn là sự lựa chọn. Nó là yêu cầu sống còn nếu muốn phát triển</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Digital Transformation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tìm trung vị của 2 dãy đã được sắp xếp</title>
      <link href="//post/2021/09/03/Tim-trung-vi-cua-2-day-da-duoc-sap-xep.html"/>
      <url>//post/2021/09/03/Tim-trung-vi-cua-2-day-da-duoc-sap-xep.html</url>
      
        <content type="html"><![CDATA[<p>Cho hai dãy <code>nums1</code>, <code>nums2</code> đã được sắp xếp theo thứ tự có size là <code>m</code> và <code>n</code>, hãy tìm trung vị (median) của hai dãy đó.</p><p>Đây là bài toán được xem là mức độ khó trên <a href="https://leetcode.com/problems/median-of-two-sorted-arrays/">leetcode.com</a>, thách thức của bài này là thuật toán phải được chạy với time <code>O(log(m+n))</code></p><hr><p>Nguyên văn bài toán và các ví dụ</p><pre><code class="highlight text">Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.The overall run time complexity should be O(log (m+n)).Example 1:Input: nums1 = [1,3], nums2 = [2]Output: 2.00000Explanation: merged array = [1,2,3] and median is 2.Example 2:Input: nums1 = [1,2], nums2 = [3,4]Output: 2.50000Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.Example 3:Input: nums1 = [0,0], nums2 = [0,0]Output: 0.00000Example 4:Input: nums1 = [], nums2 = [1]Output: 1.00000Example 5:Input: nums1 = [2], nums2 = []Output: 2.00000</code></pre><h1 id="Trung-vi-la-gi"><a href="#Trung-vi-la-gi" class="headerlink" title="Trung vị là gì?"></a>Trung vị là gì?</h1><p>Khác với trung bình, trung vị là vị trí phần tử ở chính giữa của một dãy đã sắp xếp, vị trí đó cho biết giá trị điển hình của dãy đó. Nếu dãy có số lượng phần tử là lẻ, thì sẽ lấy phần tử ở giữa, ngược lại là chẵn, thì sẽ lấy trung bình của 2 phần tử ở giữa</p><h1 id="Huong-tiep-can-1"><a href="#Huong-tiep-can-1" class="headerlink" title="Hướng tiếp cận 1"></a>Hướng tiếp cận 1</h1><p>Hướng tiếp cận ban đầu, dễ nhất chính là sử dụng một dãy merge chứa toàn bộ phần tử của hai dãy, sau đó cài đặt thuật toán sắp xếp lại rồi tìm trung vị như công thức.</p><pre><code class="highlight python"><span class="keyword">def</span> <span class="title function_">findMedianSortedArrays</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:\tnums = nums1 + nums2    <span class="comment">#sort in-place memory</span>    nums.sort()     length = <span class="built_in">len</span>(nums)\t<span class="keyword">return</span> (nums[<span class="built_in">int</span>(length/<span class="number">2</span>)-<span class="number">1</span>] + nums[<span class="built_in">int</span>(length/<span class="number">2</span>)])/<span class="number">2</span> <span class="keyword">if</span> length % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> nums[<span class="built_in">int</span>(length/<span class="number">2</span>)]</code></pre><p>Lợi ích của code này là bạn không cần quan tâm đến việc <code>sort()</code> của code được chạy như thế nào, thực tế, python sử dụng thuật toán <code>Timsort</code>, giải quyết được tổng quát đa số trường hợp để có time and space complexity thấp nhất, bạn có thể tham khảo thêm tại: </p><p><a href="https://en.wikipedia.org/wiki/Timsort">https://en.wikipedia.org/wiki/Timsort</a></p><blockquote><p>Timsort is a hybrid sorting algorithm, derived from merge sort and insertion sort, designed to perform well on many kinds of real-world data. It was invented by Tim Peters in 2002 for use in the Python programming language. The algorithm finds subsets of the data that are already ordered, and uses the subsets to sort the data more efficiently. This is done by merging an identified subset, called a run, with existing runs until certain criteria are fulfilled. Timsort has been Python’s standard sorting algorithm since version 2.3. It is now also used to sort arrays in Java SE 7, and on the Android platform.</p></blockquote><p>Tuy vậy, việc bạn sử dụng <code>sort()</code> lại <strong>không thực sự tối ưu</strong>, cũng bởi vì code quá ngắn, tinh túy của bài toán bạn chưa thực sự chạm vào, thì không một interviewer nào chấp nhận code này làm câu trả lời cuối cùng</p><p><img src="/images/pasted-6.png" alt="Ở đây chúng tôi không làm thế ;)"></p><h1 id="Huong-tiep-can-2"><a href="#Huong-tiep-can-2" class="headerlink" title="Hướng tiếp cận 2"></a>Hướng tiếp cận 2</h1><p>Khi bạn <strong>được reject</strong> câu trả lời trên, thì bạn sẽ bảo “Ồ, vậy tôi thử tìm một giải thuật sắp xếp nào đó để được <code>O(log(m+n))</code> xem sao”. Nếu bạn được nhớ lại, hoặc may mắn được interviewer nhắc bài “Cho tới hiện nay, không một chương trình tuyến tính nào có thể cài đặt thuật toán sort tốt hơn <code>O((n+m)log(n+m))</code>“. Nói như vậy không có nghĩa bạn lại đi cài đặt parallel nhé :)</p><p>Đúc kết lại, nếu bạn cố tìm thuật toán merge 2 dãy đã sắp xếp lại, thì nó không phải là câu trả lời interviewer muốn nghe</p><p>Nếu bạn có hứng thú với thuật toán merge này, bạn có thể tham khảo tại: <a href="https://www.geeksforgeeks.org/merge-two-sorted-arrays-o1-extra-space/">https://www.geeksforgeeks.org/merge-two-sorted-arrays-o1-extra-space/</a></p><h1 id="Huong-tiep-can-3"><a href="#Huong-tiep-can-3" class="headerlink" title="Hướng tiếp cận 3"></a>Hướng tiếp cận 3</h1><p>Xem lại bài toán, xét 2 khía cạnh của đề bài:</p><ol><li>Hai dãy đã được sắp xếp</li><li>Chỉ quan tâm số ở giữa để tìm trung vị</li></ol><p>&#x3D;&gt; Cần thiết để phải sort lại toàn bộ khi mình chỉ cần 1, 2 phần tử ở giữa?</p><h2 id="Y-tuong-chinh"><a href="#Y-tuong-chinh" class="headerlink" title="Ý tưởng chính"></a>Ý tưởng chính</h2><p>Xét 2 dãy <code>A = [3, 6, 8, 9, 10]</code> và <code>B = [1, 4, 12]</code>. </p><p>Dãy merge đã sắp xếp sẽ là <code>C = [1, 3, 4, 6, 8, 9, 10, 12]</code> &#x3D;&gt; Dãy <code>Median(C) = (6 + 8)/2 = 7</code></p><p>Nếu tôi cắt đôi dãy A và dãy A, 2 dãy bên trái gọi là nhóm X, 2 dãy bên phải gọi là nhóm Y, sao cho <strong>mỗi nhóm có số lượng bằng nhau hoặc chênh lệch một phần tử</strong> như sau</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3, 6, 8]</td><td>[9, 10]</td></tr><tr><td>[1]</td><td>[4, 12]</td></tr></tbody></table><p>Nếu nhóm X hoàn toàn thuộc về bên trái, nhóm Y hoàn toàn thuộc về bên phải, hay nói cách khác, <strong>Max(X) &lt;&#x3D; Min(Y)</strong>, thì bạn đã ở vị trí chính giữa của 2 dãy, hoàn toàn có thể tìm được giá trị trung vị <strong>mà không cần phải sắp xếp 2 dãy đó</strong>. Việc của mình chỉ là dịch (shift) trái hoặc dịch phải các phần tử để đáp ứng tiêu chí đó. Nếu nhóm X cho nhóm Y một phần tử ở dãy A, thì nhóm Y cũng phải cho X một phần tử ở dãy B tương ứng. Nếu bạn nhìn kỹ thì nó như theo một chiều của kim đồng hồ.</p><p>Tôi thử shift chiều kim đồng hồ, kết quả:</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3, 6]</td><td>[8, 9, 10]</td></tr><tr><td>[1, 4]</td><td>[12]</td></tr></tbody></table><p>Nhận xét Max(X) &#x3D; 6 &lt;&#x3D; Min(Y) &#x3D; 8. Do tổng số phần tử là chẵn, nên (6+8)&#x2F;2 &#x3D; 7 &#x3D;&gt; giá trị cần tìm</p><p>Có 2 ràng buộc để solution này khả thi:</p><ul><li>Nếu dãy A hoặc B không được sắp xếp độc lập, bạn không thể shift</li><li>Bài toán chỉ để tìm trung vị</li></ul><p>Đây là core của bài toán, kỹ thuật này còn gọi là <code>Binary Search</code> - tìm kiếm nhị phân, các mục tiếp theo là đi sâu vào nhiều khía cạnh phải xem xét.</p><h2 id="Khong-con-kha-nang-shift"><a href="#Khong-con-kha-nang-shift" class="headerlink" title="Không còn khả năng shift"></a>Không còn khả năng shift</h2><p>Nếu tôi thay 12 bằng 5, bài toán cần thiết phải shift thêm 1 lần, như sau:</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3, 6]</td><td>[8, 9, 10]</td></tr><tr><td>[1, 4]</td><td>[5]</td></tr></tbody></table><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3]</td><td>[6, 8, 9, 10]</td></tr><tr><td>[1, 4, 5]</td><td>?</td></tr></tbody></table><p>&#x3D;&gt; [1, 3, 4, 5, 6, 8, 9, 10] &#x3D;&gt; Chọn (5+6)&#x2F;2 &#x3D; 5.5<br>&#x3D;&gt; Uhmm, không quan trọng lắm, <code>?</code> thay bằng <code>Infinity</code> thì sẽ không bị gì, tương tự cho các trường hợp còn lại, thì bên Y bị rút hết thì sẽ là dương vô cực, X thì là âm vô cực.</p><h2 id="Truong-hop-lech-nhau-1-don-vi"><a href="#Truong-hop-lech-nhau-1-don-vi" class="headerlink" title="Trường hợp lệch nhau 1 đơn vị"></a>Trường hợp lệch nhau 1 đơn vị</h2><p>Giả sử tôi thêm 11 vào nhóm Y của dãy A</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3]</td><td>[6, 8, 9, 10, 11]</td></tr><tr><td>[1, 4, 5]</td><td>?</td></tr></tbody></table><p>&#x3D;&gt; [1, 3, 4, 5, 6, 8, 9, 10, 11] &#x3D;&gt; Chọn 6</p><p>&#x3D;&gt; Nếu lệch ở đâu thì lấy phần tử gần trung tâm nhất của bên đó</p><h2 id="Co-ton-tai-lech-nhau-nhieu-hon-1-don-vi-ma-khong-the-shift"><a href="#Co-ton-tai-lech-nhau-nhieu-hon-1-don-vi-ma-khong-the-shift" class="headerlink" title="Có tồn tại lệch nhau nhiều hơn 1 đơn vị mà không thể shift?"></a>Có tồn tại lệch nhau nhiều hơn 1 đơn vị mà không thể shift?</h2><p>Không. Giả sử:</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3]</td><td>[6, 8, 9, 10, 13, 15]</td></tr><tr><td>[1, 4, 5]</td><td>?</td></tr></tbody></table><p>&#x3D;&gt; Vi phạm việc chia đôi, chính xác ban đầu phải là:</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3, 6]</td><td>[8, 9, 10, 13, 15]</td></tr><tr><td>[1, 4, 5]</td><td>?</td></tr></tbody></table><h2 id="Lam-sao-de-biet-shift-chieu-nao"><a href="#Lam-sao-de-biet-shift-chieu-nao" class="headerlink" title="Làm sao để biết shift chiều nào?"></a>Làm sao để biết shift chiều nào?</h2><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3, 6 &#x3D; O]</td><td>[8 &#x3D; P, 9, 10]</td></tr><tr><td>[1, 4 &#x3D; N]</td><td>[5 &#x3D; M]</td></tr></tbody></table><p>Rất dễ nhận biết, xét 4 số trung tâm 6, 4, 8, 5, tương ứng O, N, P, M</p><ul><li>Theo chiều kim nếu <code>O &gt; M</code>: 6 &gt; 5. Mà <code>N &lt;= M, O &lt;= P</code> &#x3D;&gt; <code>P &gt;= O &gt; M &gt;= N</code> &#x3D;&gt; <code>P &gt; N</code></li><li>Ngược chiều kim nếu <code>N &gt; P</code>. Mà <code>N &lt;= M, O &lt;= P</code> &#x3D;&gt; <code>M &gt;= N &gt; P &gt;= O</code> &#x3D;&gt; <code>M &gt; O</code></li></ul><p>Như vậy, chỉ tồn tại một trong 2 điều kiện đó có thể xảy ra. Đối với dấu <code>=</code>, thuật toán có thể kết thúc ngay, vd:</p><table><thead><tr><th>Nhóm X</th><th>Nhóm Y</th></tr></thead><tbody><tr><td>[3, 5 &#x3D; O]</td><td>[5 &#x3D; P, 9, 10]</td></tr><tr><td>[1, 5 &#x3D; N]</td><td>[5 &#x3D; M]</td></tr></tbody></table><p>&#x3D;&gt; Max(X) &#x3D; 5 &lt;&#x3D; Minx(Y) &#x3D; 5 &#x3D;&gt; (5+5)&#x2F;2 &#x3D; 5</p><p>&#x3D;&gt; <code>[1, 3, 5, 5, 5, 5, 9, 10]</code> &#x3D;&gt; Chọn 5</p><h2 id="Dich-bao-nhieu-don-vi"><a href="#Dich-bao-nhieu-don-vi" class="headerlink" title="Dịch bao nhiêu đơn vị?"></a>Dịch bao nhiêu đơn vị?</h2><p>Để có được độ phức tạp <code>O(log(m+n))</code>, cần thiết phải search chia đôi liên tục thay vì dịch từng đơn vị 1. Nghĩa là, với độ dài <code>k = m + n</code>, mỗi vòng lặp sẽ thực hiện trên khoảng <code>k = k/2</code>, chọn nửa <code>k</code> bên nào sẽ do chiều shift quyết định. </p><h2 id="Cai-dat-tren-Python"><a href="#Cai-dat-tren-Python" class="headerlink" title="Cài đặt trên Python"></a>Cài đặt trên Python</h2><p>Thuật toán:</p><ul><li>Chọn A là dãy bé, B là dãy lớn</li><li>Khai báo các var</li><li><code>len_a</code>, <code>len_b</code> là size của dãy A, B</li><li><code>most_min</code>, <code>most_max</code> để sử dụng khi không thể shift</li><li><code>size_x</code> là size của nhóm X, mọi thao tác đều trên nhóm X</li><li><code>a_search_start</code> <code>a_search_end</code> định nghĩa khoảng trên dãy A mà BinarySearch sẽ nhảy vào. Mặc định khởi tạo sẽ bằng với khoảng của dãy A</li><li>Trong vòng lặp,</li><li><code>x_len_a</code>, <code>x_len_b</code> là độ dài dãy A, B trên nhóm X. Lần lặp đầu tiên <code>x_len_a</code> sẽ lấy khoảng nửa của dãy A, từ đó tìm ra <code>x_len_b</code>. Từ lần 2 trở đi, tùy vào chiều shift mà <code>a_search_start/end</code> quyết định <code>x_len_a</code> sẽ tăng hay giảm, dẫn đến <code>x_len_b</code> giảm hay tăng, tương ứng.</li><li><code>x_a</code>, <code>y_a</code>, <code>x_b</code>, <code>y_b</code> là 4 vị trí trung tâm đang xét</li><li>Nếu <code>Min(X) &lt;= Min(Y)</code>, tương ứng với <code>x_a &lt;= y_b and x_b &lt;= y_a</code>, xét chẵn lẻ của tổng dãy và ra kết quả</li><li>Ngược lại có 2 trường hợp xảy ra:</li><li>Nếu dịch theo chiều kim, <code>x_a &gt; y_b</code>, thì sẽ lùi  <code>a_search_end</code> một khoảng sao cho mốc mới sẽ bằng với <code>x_len_a</code> trừ một đơn vị</li><li>Ngược chiều kim, thì sẽ tăng <code>a_search_start</code> một khoảng sao cho mốc mới sẽ bằng với <code>x_len_a</code> thêm một đơn vị</li></ul><pre><code class="highlight Python"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span><span class="keyword">def</span> <span class="title function_">findMedianSortedArrays</span>(<span class="params">self, A: <span class="type">List</span>[<span class="built_in">int</span>], B: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:    <span class="keyword">if</span> <span class="built_in">len</span>(A) &gt; <span class="built_in">len</span>(B):        A, B = B, A    len_a, len_b = <span class="built_in">len</span>(A), <span class="built_in">len</span>(B)    most_min, most_max = <span class="built_in">float</span>(<span class="string">&quot;-inf&quot;</span>), <span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)    size_x = (len_a + len_b + <span class="number">1</span>) // <span class="number">2</span>    a_search_start = <span class="number">0</span>    a_search_end = len_a    is_even = ((len_a + len_b) % <span class="number">2</span>) == <span class="number">0</span>    <span class="keyword">while</span> <span class="literal">True</span>:             x_len_a = (a_search_start + a_search_end) // <span class="number">2</span>        x_len_b = size_x - x_len_a        x_a = most_min <span class="keyword">if</span> x_len_a == <span class="number">0</span> <span class="keyword">else</span> A[x_len_a - <span class="number">1</span>]        y_a = most_max <span class="keyword">if</span> x_len_a == len_a <span class="keyword">else</span> A[x_len_a]        x_b = most_min <span class="keyword">if</span> x_len_b == <span class="number">0</span> <span class="keyword">else</span> B[x_len_b - <span class="number">1</span>]        y_b = most_max <span class="keyword">if</span> x_len_b == len_b <span class="keyword">else</span> B[x_len_b]        <span class="keyword">if</span> x_a &lt;= y_b <span class="keyword">and</span> x_b &lt;= y_a:            <span class="keyword">if</span> is_even:                <span class="keyword">return</span> (<span class="built_in">max</span>(x_a, x_b) + <span class="built_in">min</span>(y_a, y_b))/ <span class="number">2</span>            <span class="keyword">return</span> <span class="built_in">max</span>(x_a, x_b)        <span class="keyword">if</span> x_a &gt; y_b:            a_search_end = x_len_a - <span class="number">1</span>            <span class="keyword">continue</span>        <span class="keyword">if</span> x_b &gt; y_a:            a_search_start = x_len_a + <span class="number">1</span>            <span class="keyword">continue</span>    <span class="keyword">return</span> <span class="number">0</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> BinarySearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Văn hoá hỏi đáp trên StackOverflow</title>
      <link href="//post/2021/04/01/Sinh-hoat-tren-StackOverflow-hieu-qua.html"/>
      <url>//post/2021/04/01/Sinh-hoat-tren-StackOverflow-hieu-qua.html</url>
      
        <content type="html"><![CDATA[<p>StackOverFlow (SO) trong bài viết đề cập đến là một cộng đồng của các developer tại stackoverflow.com, mặc dù còn khá non trẻ khi ra đời vào khoảng 2008 nếu so sánh với các cộng đồng lớn mạnh khác, nhưng nó lại mang đến hiệu quả rất lớn cho hệ thống tri thức của dev, không khác gì wikipedia hay google.</p><hr><p>Trước khi SO phổ biến, tôi thường hay đi qua codeproject, msdn, nhưng để lại ký ức trong đầu chả có gì ngoài đặt câu hỏi và giải thích rườm rà, code block thì í ẹ. Cộng đồng SO, dần dần tự cấu thành các quy chuẩn chung trong việc hỏi-đáp, không những giúp giải quyết code lẹ hơn, mà còn giúp cải thiện mindset cách người đặt câu hỏi và người trả lời. Đặt một câu hỏi gọn, lẹ, đơn giản, nghĩa là đã giải quyết được 50% vấn đề rồi.<br><img src="/images/right-question.png"></p><p>Mục tiêu của SO, chính là xây dựng một thư viện tri thức đồ sộ, mà nơi đó các developer có thể tìm được câu trả lời tiết kiệm thời gian nhất có thể. Do đó, đừng nên hiểu sai rằng SO là dịch vụ hỏi đáp, bởi SO chưa thu phí người dùng bao giờ. Nhiều developer còn ví von rằng, thà Google bị sập, còn hơn là StackOverflow bị sập.</p><h1 id="Nguoi-hoi-nen-tranh-nhung-gi"><a href="#Nguoi-hoi-nen-tranh-nhung-gi" class="headerlink" title="Người hỏi nên tránh những gì?"></a>Người hỏi nên tránh những gì?</h1><p>Có một sự thật hiển nhiên rằng nếu bạn không hiểu vấn đề của bạn, thì không ai sẽ chịu hiểu vấn đề của bạn cả. Một câu hỏi cộc lốc, trống không, không đầu không đuôi thì cũng sẽ không nhận được quan tâm, tất nhiên càng không nhận được câu trả lời thoả đáng. Tôi gần đây để ý thấy có nhiều cộng đồng Việt dành riêng cho dev cũng xuất hiện nhiều, nhưng tôi cũng thấy câu chuyện y như SO, khi mà các newbie chưa có <code>điểm tín dụng (reputation)</code>, thường không biết cách đặt câu hỏi, luôn bắt đầu bằng những câu ít tinh thần xây dựng</p><ul><li>Anh ơi, cứu em</li><li>Giúp này với</li><li>Nó đang bị gì vậy?</li><li>Giải bài tập với -&gt; Trang hỏi đáp chứ đâu phải dịch vụ giải bài tập đâu :(</li><li>Mình muốn làm này và này thì phải sao ạ -&gt; Thiếu sự đầu tư vào search google và phạm vi quá rộng để trở thành một câu hỏi tập trung</li></ul><p>Sau đó sẽ đi kèm với:</p><ul><li>Chụp màn hình đầy code -&gt; Bạn bắt người trả lời phải căng con mắt ra xem project của bạn </li><li>Chụp màn hình chứa lỗi -&gt; Có lỗi xảy ra thì ngoại trừ trường hợp cần trực quan, còn lại chỉ cần message là đủ, dòng message chỉ nơi xảy ra lỗi nó rất đáng giá.</li><li>Chụp màn hình bằng điện thoại -&gt; Bạn huỷ diệt sự kiên nhẫn của người trả lời</li><li>Post wall of code -&gt; Bạn bắt người trả lời phải đi vào chùm logic ngớ ngẩn của bạn, tất nhiên họ không buồn tìm hiểu. Ít nhất phải có sự tối giản hoá code (minimal and reproducible example) để người trả lời có thể reproduce lại nhanh nhất có thể</li><li>Hỏi nhiều câu hỏi cùng một lúc</li><li>Hỏi lan man, không tập trung câu hỏi</li><li>Hỏi dịch vụ này dịch vụ kia tốt không -&gt; Điều này sẽ tạo cơ hội cho seeder vào feed</li></ul><p>Tôi thấy cộng đồng VN tương đối dễ tính với những trường hợp như vậy, vì đa số toàn fresher, không chịu khó đọc tiếng anh, không rõ keyword hoặc thuật ngữ nào đó. Trên SO, nếu họ <em>không thấy mọi sự nỗ lực giải quyết vấn đề</em> của bạn, chắc chắn bạn sẽ ăn downvote đến nỗi bị xoá đi :)</p><h1 id="Vai-tro-cua-nguoi-tra-loi"><a href="#Vai-tro-cua-nguoi-tra-loi" class="headerlink" title="Vai trò của người trả lời?"></a>Vai trò của người trả lời?</h1><p>Người trả lời, có thể xem như cứu tinh của vấn đề, thậm chí có thể lên ngôi đền huyền thoại chỉ vì một câu hỏi được trả lời từ thuở sơ khai của SO. Người trả lời không trả lời những câu vô nghĩa, hoặc chỉ mang tính <code>bình luận</code> và <code>không chắc chắn</code>:</p><ul><li>Bạn thử này xem được không</li><li>Bạn có biết suy nghĩ của bạn bla bla bla không</li><li>Đưa link, hoặc wall of code rồi chạy đi không một lời giải thích</li><li>Thay vì đưa ra giải pháp tối ưu, chí ít thì cũng thể đưa ra một giải pháp đi vòng (workaround), chứ không chọn giải pháp tiêu cực: VD <strong>Windows tôi bị lỗi driver, tôi hỏi driver phù hợp -&gt; Câu trả nhận được là tôi hãy Cài lại Windows đi !?</strong>. Đây là câu chuyện xảy ra trên vn-zoom hồi khoảng 2008 mà tôi tham gia, post nào cũng nhại lại câu này mãi, gây ức chế người hỏi lẫn người đọc khi đang search tìm.</li><li>Nếu quá lớn, hoặc quá chuyên sâu, bạn cũng có thể đưa ý tưởng, tuy nhiên không nên lạm dụng vì sẽ rất dễ bị confuse giữa bình luận và trả lời, tuỳ tính chất, nhưng cộng đồng SO sẽ không quá khắt khe, miễn nó có lập luận hợp lý.</li></ul><h1 id="Hoi-dap-van-hoa-chuyen-nghiep"><a href="#Hoi-dap-van-hoa-chuyen-nghiep" class="headerlink" title="Hỏi đáp văn hoá, chuyên nghiệp"></a>Hỏi đáp văn hoá, chuyên nghiệp</h1><p>Trên SO, có một thứ khá thú vị, đó là nếu bạn đạt được điểm tín dụng cao, bạn sẽ unlock được các quyền hạn đặc biệt</p><p><img src="/images/privileges.png"></p><p>Bạn sẽ có nhiều quyền unlock như upvote, comment, edit bài viết, review bài vote của newbie để đánh giá có phù hợp hay không. Điểm tín dụng cao không phải chỉ ở người trả lời mà còn ở người hỏi, cách nỗ lực giải quyết vấn đề, các câu hỏi hay.</p><p>Tựu trung lại, cộng đồng SO sẽ thích template như sau:</p><blockquote><p>Chào mọi người,..<br>Mình đang bị vấn đề này…<br>Mình cố gắng như này, nhưng chỉ ra cái nọ<br>Mình nghi vấn này…, mình cũng có thí nghiệm thêm vài case khác để củng cố giả thuyết<br>Thêm hình&#x2F;video nếu có (Không phải hình crash, vì message đã có đủ thông tin hình crash, chỉ cần hình mô tả trực quan về UI)<br>Code đã được minimal và reproducible<br>Môi trường đi kèm (.NET Core 3.0, Windows 10 Build xxxx,…)<br>Cám ơn<br>Gắn tag phù hợp (vd C#, Python, Azure Function, SQL,…)</p></blockquote><p>Ở đây ắt sẽ có câu hỏi đặt ra là nếu đã có minimal example rồi thì cần gì phải hỏi? Thực tế, việc bạn minize program rồi thì sẽ có hơn 70% khả năng bạn đã tự giải đáp vấn đề, do đó, không còn cách nào khác bạn phải tự trang bị kỹ năng debug, kỹ năng lập luận, suy luận và đặt nghi vấn, thậm chí là tạo một project khác để test nó luôn<br>nếu muốn tăng kiến thức.</p><p>Nếu bạn biết đặt câu hỏi đúng, sẽ có khả năng lớn chính developer của project đó đứng ra giải quyết giúp bạn, tôi có vài lần may mắn được các bác trong dự án Google Map, Microsoft Azure Function giúp giải quyết vấn đề, quá tuyệt vời luôn :)</p>]]></content>
      
      
      <categories>
          
          <category> Softskill </category>
          
      </categories>
      
      
        <tags>
            
            <tag> StackOverflow </tag>
            
            <tag> Softskill </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
